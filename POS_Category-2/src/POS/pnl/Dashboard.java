/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package POS.pnl;

import POS.Main.ImgPath;
import POS.Main.MyDB;
import POS.advance_payment.Dlg_advance_payment;
import POS.advance_payment.S1_cash_advance;
import POS.dlg.*;
import POS.dlg.Dlg_login1.OutputData;
import POS.inventory.Dlg_add;
import POS.dlg2.Dlg_voider;
import POS.dlg3.Dlg_add_discount;
import POS.guests.Dlg_guest;
import POS.guests.S1_guest;
import POS.guests.S2_guest_charges;
import POS.inventory.S2_assembly;
import POS.remitances.Dlg_remit;
import POS.rooms.S1_check_in;
import POS.rpt2.rpt_report;
import POS.rpt2.to_date_from;
import POS.svc.S12_retval_user_level;
import POS.svc.S15_save_new_pen_orders;
import POS.svc.S3_insert_new_user;
import POS.svc.Svc_1;
import POS.svc3.S2_update_pending;
import POS.svc3.S3_getpending;
import POS.to.to_order;
import POS.to.to_pay;
import POS.to.to_users;
import POS.to2.to_credit;
import POS.to2.to_disc;
import POS.utl.*;
import POS.utl.Center;
import POS_dlg4.Dlg_report_endorsements;
import POS_dlg4.Dlg_table;
import POS_svc4.S1_categories;
import POS_svc4.S1_categories.to_name_cat;
import POS_svc4.S2_search;
import POS_svc4.S2_search.to_items;
import POS_svc4.S2_search.to_items_status;
import POS_svc4.S5_tables;
import com.jgoodies.binding.list.ArrayListModel;
import de.jgrid.JGrid;
import de.jgrid.renderer.GridCellRenderer;

import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;
//import overallPOS.modules.share.utils.SearchField;
import org.jdesktop.swingx.JXLabel;
import org.jdesktop.swingx.combobox.ListComboBoxModel;
import org.netbeans.lib.awtextra.AbsoluteLayout;
import overallPOS.modules.share.utils.*;

import test.Dlg_GUI_Setting;
import test.Dlg_check;
import test.Dlg_quantity_menu;
import test.Scrolling;

/**
 *
 * @author i1
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        myInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGrid1 = new de.jgrid.JGrid();
        jPanel1 = new javax.swing.JPanel();
        pnl_holder_orders = new javax.swing.JPanel();
        pnl_holder_items = new javax.swing.JPanel();
        pnl_category = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        sp_cat = new javax.swing.JScrollPane();
        jg_categories = new de.jgrid.JGrid();
        jButton7 = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        btn_add_order = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        pnl_holder_guest_details = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lbl_guest_total = new javax.swing.JLabel();
        lbl_rate = new javax.swing.JLabel();
        lbl_oders_payment = new javax.swing.JLabel();
        lbl_check_date = new javax.swing.JLabel();
        lbl_guest_no = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        cb_guest = new javax.swing.JComboBox();
        lbl_bill = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lbl_advance_payment = new javax.swing.JLabel();
        lbl_payment = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        lbl_cashier_name = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbl_table_no = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbl_or_no = new javax.swing.JLabel();
        sp_items = new javax.swing.JScrollPane();
        jg_items = new de.jgrid.JGrid();
        js_orders = new javax.swing.JScrollPane();
        tbl_items = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        pnl_holder_search = new javax.swing.JPanel();
        tf_search = new javax.swing.JTextField();
        btn_menu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        lbl_amount = new javax.swing.JLabel();
        lbl_order_count = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        js_items = new javax.swing.JScrollPane();
        tbl_orders = new javax.swing.JTable();
        sp_orders = new javax.swing.JScrollPane();
        jg_orders = new de.jgrid.JGrid();
        jButton9 = new javax.swing.JButton();
        pnl_holder_rooms = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        btn_clear_all = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        btn_standby = new javax.swing.JButton();
        btn_pay = new javax.swing.JButton();
        tf_barcode = new javax.swing.JTextField();
        lbl_remit = new javax.swing.JButton();
        lbl_next_customer = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnl_holder_orders.setBackground(new java.awt.Color(102, 204, 255));

        pnl_holder_items.setBackground(new java.awt.Color(255, 255, 255));
        pnl_holder_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pnl_holder_itemsMouseEntered(evt);
            }
        });

        pnl_category.setBackground(new java.awt.Color(204, 204, 204));

        jButton6.setText("^");
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        sp_cat.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        sp_cat.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jg_categories.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jg_categories.setFocusable(false);
        jg_categories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jg_categoriesMouseClicked(evt);
            }
        });
        sp_cat.setViewportView(jg_categories);

        jButton7.setText("v");
        jButton7.setFocusable(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btn_back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_back.setText("BACK");
        btn_back.setFocusable(false);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        btn_add_order.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_add_order.setText("ADD");
        btn_add_order.setFocusable(false);
        btn_add_order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_orderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_categoryLayout = new javax.swing.GroupLayout(pnl_category);
        pnl_category.setLayout(pnl_categoryLayout);
        pnl_categoryLayout.setHorizontalGroup(
            pnl_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_categoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sp_cat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl_categoryLayout.createSequentialGroup()
                        .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_add_order, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnl_categoryLayout.setVerticalGroup(
            pnl_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_categoryLayout.createSequentialGroup()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(sp_cat)
                .addGap(0, 0, 0)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnl_categoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_add_order, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        jButton2.setText("^");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pnl_holder_guest_details.setBackground(new java.awt.Color(227, 225, 225));
        pnl_holder_guest_details.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("GUEST NO:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("NAME:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("DATE:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("ADDT. CHARGES:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("ACCOMODATION:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("AMOUNT TO PAY:");

        lbl_guest_total.setBackground(new java.awt.Color(255, 255, 255));
        lbl_guest_total.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_guest_total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_guest_total.setText("0");
        lbl_guest_total.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_guest_total.setOpaque(true);

        lbl_rate.setBackground(new java.awt.Color(255, 255, 255));
        lbl_rate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_rate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_rate.setText("0");
        lbl_rate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_rate.setOpaque(true);

        lbl_oders_payment.setBackground(new java.awt.Color(255, 255, 255));
        lbl_oders_payment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_oders_payment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_oders_payment.setText("0");
        lbl_oders_payment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_oders_payment.setOpaque(true);

        lbl_check_date.setBackground(new java.awt.Color(255, 255, 255));
        lbl_check_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_check_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_check_date.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_check_date.setOpaque(true);

        lbl_guest_no.setBackground(new java.awt.Color(255, 255, 255));
        lbl_guest_no.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_guest_no.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_guest_no.setText("00000");
        lbl_guest_no.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_guest_no.setOpaque(true);

        jButton3.setText("-");
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cb_guest.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cb_guest.setFocusable(false);
        cb_guest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_guestActionPerformed(evt);
            }
        });

        lbl_bill.setBackground(new java.awt.Color(255, 255, 255));
        lbl_bill.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_bill.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_bill.setText("BILL");
        lbl_bill.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_bill.setOpaque(true);
        lbl_bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_billMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("ADVANCE PAYMENT:");

        lbl_advance_payment.setBackground(new java.awt.Color(255, 255, 255));
        lbl_advance_payment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_advance_payment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_advance_payment.setText("0");
        lbl_advance_payment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_advance_payment.setOpaque(true);

        lbl_payment.setBackground(new java.awt.Color(255, 255, 255));
        lbl_payment.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_payment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_payment.setText("PAY");
        lbl_payment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_payment.setOpaque(true);
        lbl_payment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_paymentMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnl_holder_guest_detailsLayout = new javax.swing.GroupLayout(pnl_holder_guest_details);
        pnl_holder_guest_details.setLayout(pnl_holder_guest_detailsLayout);
        pnl_holder_guest_detailsLayout.setHorizontalGroup(
            pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(4, 4, 4)
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_oders_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbl_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_guest_total, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                                .addComponent(lbl_guest_no, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_advance_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cb_guest, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_check_date, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        pnl_holder_guest_detailsLayout.setVerticalGroup(
            pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbl_guest_no, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_advance_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_holder_guest_detailsLayout.createSequentialGroup()
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_guest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_check_date, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_rate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_oders_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnl_holder_guest_detailsLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(pnl_holder_guest_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbl_bill, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_payment, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_holder_guest_detailsLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_guest_total, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("NAME:");

        lbl_cashier_name.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_cashier_name.setForeground(new java.awt.Color(0, 153, 255));
        lbl_cashier_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_cashier_name.setText("RONALD PASCUA");
        lbl_cashier_name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ONLINE");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("STATUS:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("ROOM NO:");

        lbl_table_no.setBackground(new java.awt.Color(0, 0, 0));
        lbl_table_no.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_table_no.setForeground(new java.awt.Color(0, 153, 255));
        lbl_table_no.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_table_no.setText("0");
        lbl_table_no.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("OR #:");

        lbl_or_no.setBackground(new java.awt.Color(0, 0, 0));
        lbl_or_no.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lbl_or_no.setForeground(new java.awt.Color(0, 153, 255));
        lbl_or_no.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_or_no.setText("00001");
        lbl_or_no.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_cashier_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_table_no, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_or_no, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5)
            .addComponent(jLabel4)
            .addComponent(jLabel2)
            .addComponent(lbl_cashier_name, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel9)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lbl_table_no)
                .addComponent(jLabel7)
                .addComponent(lbl_or_no))
        );

        sp_items.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        sp_items.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jg_items.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jg_items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jg_itemsMouseClicked(evt);
            }
        });
        sp_items.setViewportView(jg_items);

        tbl_items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        js_orders.setViewportView(tbl_items);

        jButton1.setText("v");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        pnl_holder_search.setBackground(new java.awt.Color(255, 255, 255));

        tf_search.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        tf_search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_searchKeyReleased(evt);
            }
        });

        btn_menu.setText("MENU");
        btn_menu.setFocusable(false);
        btn_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("SEARCH");

        javax.swing.GroupLayout pnl_holder_searchLayout = new javax.swing.GroupLayout(pnl_holder_search);
        pnl_holder_search.setLayout(pnl_holder_searchLayout);
        pnl_holder_searchLayout.setHorizontalGroup(
            pnl_holder_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_holder_searchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnl_holder_searchLayout.setVerticalGroup(
            pnl_holder_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_holder_searchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_holder_searchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_search, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(btn_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_holder_guest_details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(sp_items, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(js_orders, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_holder_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_holder_guest_details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sp_items, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(js_orders, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_holder_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnl_holder_itemsLayout = new javax.swing.GroupLayout(pnl_holder_items);
        pnl_holder_items.setLayout(pnl_holder_itemsLayout);
        pnl_holder_itemsLayout.setHorizontalGroup(
            pnl_holder_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_holder_itemsLayout.createSequentialGroup()
                .addComponent(pnl_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_holder_itemsLayout.setVerticalGroup(
            pnl_holder_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_category, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jButton8.setText("^");
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        lbl_amount.setBackground(new java.awt.Color(0, 0, 0));
        lbl_amount.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl_amount.setForeground(new java.awt.Color(255, 255, 255));
        lbl_amount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_amount.setText("0.00");
        lbl_amount.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbl_amount.setOpaque(true);
        lbl_amount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_amountMouseClicked(evt);
            }
        });

        lbl_order_count.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lbl_order_count.setForeground(new java.awt.Color(41, 9, 149));
        lbl_order_count.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_order_count.setFocusable(false);

        jLabel13.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(41, 9, 149));
        jLabel13.setText("COUNT:");
        jLabel13.setFocusable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(lbl_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_order_count, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(lbl_amount)
                .addGap(0, 2, Short.MAX_VALUE))
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl_order_count, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tbl_orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        js_items.setViewportView(tbl_orders);

        sp_orders.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        sp_orders.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jg_orders.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jg_orders.setMaximumSize(new java.awt.Dimension(180, 0));
        jg_orders.setMinimumSize(new java.awt.Dimension(180, 0));
        jg_orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jg_ordersMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jg_ordersMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jg_ordersMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jg_ordersMouseReleased(evt);
            }
        });
        jg_orders.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jg_ordersFocusLost(evt);
            }
        });
        sp_orders.setViewportView(jg_orders);

        jButton9.setText("v");
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        pnl_holder_rooms.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        btn_clear_all.setBackground(new java.awt.Color(255, 255, 255));
        btn_clear_all.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/close32x32.png"))); // NOI18N
        btn_clear_all.setText("CLEAR ALL");
        btn_clear_all.setBorderPainted(false);
        btn_clear_all.setContentAreaFilled(false);
        btn_clear_all.setFocusable(false);
        btn_clear_all.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_clear_all.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btn_clear_all.setOpaque(true);
        btn_clear_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clear_allActionPerformed(evt);
            }
        });

        btn_logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/log-out2.png"))); // NOI18N
        btn_logout.setBorderPainted(false);
        btn_logout.setContentAreaFilled(false);
        btn_logout.setFocusable(false);
        btn_logout.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/log-out button-MO.png"))); // NOI18N
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        btn_standby.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/stand-by.png"))); // NOI18N
        btn_standby.setBorderPainted(false);
        btn_standby.setContentAreaFilled(false);
        btn_standby.setFocusable(false);
        btn_standby.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/stand-by-MO.png"))); // NOI18N
        btn_standby.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_standbyActionPerformed(evt);
            }
        });

        btn_pay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/pay.png"))); // NOI18N
        btn_pay.setBorderPainted(false);
        btn_pay.setContentAreaFilled(false);
        btn_pay.setFocusable(false);
        btn_pay.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/pay-MO.png"))); // NOI18N
        btn_pay.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/img2/pay-MO.png"))); // NOI18N
        btn_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_payActionPerformed(evt);
            }
        });

        tf_barcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbl_remit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_remit.setText("REMIT");
        lbl_remit.setFocusable(false);
        lbl_remit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_remitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btn_clear_all)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(tf_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_remit)
                .addGap(18, 18, 18)
                .addComponent(btn_pay, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_standby, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_logout, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_standby, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_pay, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_clear_all, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tf_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 2, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_remit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout pnl_holder_roomsLayout = new javax.swing.GroupLayout(pnl_holder_rooms);
        pnl_holder_rooms.setLayout(pnl_holder_roomsLayout);
        pnl_holder_roomsLayout.setHorizontalGroup(
            pnl_holder_roomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_holder_roomsLayout.setVerticalGroup(
            pnl_holder_roomsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lbl_next_customer.setBackground(new java.awt.Color(0, 0, 0));
        lbl_next_customer.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbl_next_customer.setForeground(new java.awt.Color(0, 255, 0));
        lbl_next_customer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_next_customer.setText("NEXT CUSTOMER PLEASE");
        lbl_next_customer.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_next_customer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sp_orders, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pnl_holder_rooms, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(js_items, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_next_customer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sp_orders)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(js_items, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_holder_rooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout pnl_holder_ordersLayout = new javax.swing.GroupLayout(pnl_holder_orders);
        pnl_holder_orders.setLayout(pnl_holder_ordersLayout);
        pnl_holder_ordersLayout.setHorizontalGroup(
            pnl_holder_ordersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_holder_ordersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_holder_items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_holder_ordersLayout.setVerticalGroup(
            pnl_holder_ordersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_holder_ordersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_holder_ordersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_holder_items, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_holder_orders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_holder_orders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_clear_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clear_allActionPerformed
        clear_order();
    }//GEN-LAST:event_btn_clear_allActionPerformed

    private void jg_ordersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_ordersMouseClicked
        // TODO add your handling code here:
        set_order_pop();
    }//GEN-LAST:event_jg_ordersMouseClicked

    private void jg_ordersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jg_ordersFocusLost
    }//GEN-LAST:event_jg_ordersFocusLost

    private void lbl_amountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_amountMouseClicked
    }//GEN-LAST:event_lbl_amountMouseClicked

    private void pnl_holder_itemsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_holder_itemsMouseEntered
    }//GEN-LAST:event_pnl_holder_itemsMouseEntered

    private void jg_ordersMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_ordersMouseExited
    }//GEN-LAST:event_jg_ordersMouseExited

    private void jg_ordersMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_ordersMouseReleased
    }//GEN-LAST:event_jg_ordersMouseReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        do_up_cat();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        do_down_orders();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        do_up_orders();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void tf_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_searchKeyReleased
        category_id = "";
        init_items();
        update_qty_items();
    }//GEN-LAST:event_tf_searchKeyReleased

    private void jg_categoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_categoriesMouseClicked

        if (user_id.equals("6") || user_id.equals("0")) {
            get_clicked_category();
            init_items();
            update_qty_items();
        }

    }//GEN-LAST:event_jg_categoriesMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        do_down_cat();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        do_down_items();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        do_up_items();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jg_itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_itemsMouseClicked
        // TODO add your handling code here:
        set_item_pop();
    }//GEN-LAST:event_jg_itemsMouseClicked

    private void btn_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_payActionPerformed
        payments(lbl_amount.getText());
    }//GEN-LAST:event_btn_payActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        back();
        my_guest.clear();
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_add_orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_orderActionPerformed
        add_room_order();
    }//GEN-LAST:event_btn_add_orderActionPerformed

    private void btn_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuActionPerformed
        set_menu_popup();
    }//GEN-LAST:event_btn_menuActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        do_login("");
    }//GEN-LAST:event_formWindowClosing

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        logout();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void btn_standbyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_standbyActionPerformed
        do_login("");
    }//GEN-LAST:event_btn_standbyActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here
        max_guest_panel();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cb_guestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_guestActionPerformed
        set_guest_orders();
    }//GEN-LAST:event_cb_guestActionPerformed

    private void lbl_billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_billMouseClicked
        bill();
    }//GEN-LAST:event_lbl_billMouseClicked

    private void lbl_remitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_remitActionPerformed
        remitance();
    }//GEN-LAST:event_lbl_remitActionPerformed

    private void lbl_paymentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_paymentMouseClicked
        advance_payment();
    }//GEN-LAST:event_lbl_paymentMouseClicked

    private void jg_ordersMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jg_ordersMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jg_ordersMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Application.setSystemLookAndFeel();
        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                String mydb = System.getProperty("mydb", "db_pos_restaurant");
                MyDB.setNames(mydb);

                String img_path = System.getProperty("img_path", "C:\\Users\\i1\\");
                ImgPath.setPath(img_path);
                Dashboard aw = new Dashboard();
                System.setProperty("sun.java2d.opengl", "True");
                Application.setSystemLookAndFeel();
                Screen.set_normal(aw);
                aw.setVisible(true);
                aw.do_login("");

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add_order;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_clear_all;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_menu;
    private javax.swing.JButton btn_pay;
    private javax.swing.JButton btn_standby;
    private javax.swing.JComboBox cb_guest;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private de.jgrid.JGrid jGrid1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private de.jgrid.JGrid jg_categories;
    private de.jgrid.JGrid jg_items;
    private de.jgrid.JGrid jg_orders;
    private javax.swing.JScrollPane js_items;
    private javax.swing.JScrollPane js_orders;
    private javax.swing.JLabel lbl_advance_payment;
    private javax.swing.JLabel lbl_amount;
    private javax.swing.JLabel lbl_bill;
    private javax.swing.JLabel lbl_cashier_name;
    private javax.swing.JLabel lbl_check_date;
    private javax.swing.JLabel lbl_guest_no;
    private javax.swing.JLabel lbl_guest_total;
    private javax.swing.JLabel lbl_next_customer;
    private javax.swing.JLabel lbl_oders_payment;
    private javax.swing.JLabel lbl_or_no;
    private javax.swing.JLabel lbl_order_count;
    private javax.swing.JLabel lbl_payment;
    private javax.swing.JLabel lbl_rate;
    private javax.swing.JButton lbl_remit;
    private javax.swing.JLabel lbl_table_no;
    private javax.swing.JPanel pnl_category;
    private javax.swing.JPanel pnl_holder_guest_details;
    private javax.swing.JPanel pnl_holder_items;
    private javax.swing.JPanel pnl_holder_orders;
    private javax.swing.JPanel pnl_holder_rooms;
    private javax.swing.JPanel pnl_holder_search;
    private javax.swing.JScrollPane sp_cat;
    private javax.swing.JScrollPane sp_items;
    private javax.swing.JScrollPane sp_orders;
    private javax.swing.JTable tbl_items;
    private javax.swing.JTable tbl_orders;
    private javax.swing.JTextField tf_barcode;
    private javax.swing.JTextField tf_search;
    // End of variables declaration//GEN-END:variables

    private void myInit() {
        set_or();
        lbl_remit.setVisible(false);
        pnl_category.setVisible(false);
        tf_barcode.setVisible(false);
        lbl_next_customer.setVisible(false);
//        key();
//        init_tf();
        hide_popups();
        scrolling();
        set_visible();
        my_version();
        init_cashier();
        init_catogories();
        init_rooms();
        init_items();
        updateReceipt();
    }

    private void set_or() {
        lbl_or_no.setText(Svc_1.increment_id());
//        JOptionPane.showMessageDialog(null, lbl_or_no.getText());
    }
//    private void init_tf() {
//        SearchField sf = (SearchField) tf_barcode;
//        sf.set_instruction1("ENTER BARCODE");
//        sf.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
//        sf.set_searcher(new SearchField.ISearcher() {
//
//            @Override
//            public List get_entered(String starts_with) {
//                // your search list here coming from svc for example.
//                return new ArrayList();
//            }
//        });
//
//        sf.setCallbackDisplay(new SearchField.CallbackDisplay() {
//
//            @Override
//            public void display(Object o) {
////                prcss_display(o);
//            }
//        });
//    }

    private void key() {
        final Window p = (Window) this;
        KeyListener kl = new KeyAdapter() {

            @Override
            public void keyReleased(KeyEvent evt) {
                if (evt.getKeyCode() == KeyEvent.VK_F10) {
                    evt.consume();
                    Dlg_GUI_Setting nd = Dlg_GUI_Setting.create(p, true);
                    nd.setTitle("");
//                    nd.do_pass("");
                    nd.setCallback(new Dlg_GUI_Setting.Callback() {

                        @Override
                        public void ok(CloseDialog closeDialog, Dlg_GUI_Setting.OutputData data) {
                            closeDialog.ok();
                        }
                    });
                    Center.setCenter(nd);
                    nd.setVisible(true);

                }
            }
        };

        this.addKeyListener(kl);
    }

    private void scrolling() {
        Scrolling.ComponentDragScrollListener l = new Scrolling.ComponentDragScrollListener(jg_orders);
        jg_orders.addMouseMotionListener(l);
        jg_orders.addMouseListener(l);
        jg_orders.addHierarchyListener(l);

        Scrolling.ComponentDragScrollListener l2 = new Scrolling.ComponentDragScrollListener(jg_items);
        jg_items.addMouseMotionListener(l2);
        jg_items.addMouseListener(l2);
        jg_items.addHierarchyListener(l2);

        Scrolling.ComponentDragScrollListener l3 = new Scrolling.ComponentDragScrollListener(jg_categories);
        jg_categories.addMouseMotionListener(l3);
        jg_categories.addMouseListener(l3);
        jg_categories.addHierarchyListener(l3);
    }
//    int max_panel=0;

    private void max_guest_panel() {
        if (jButton3.getText().
                equals("-")) {
            pnl_holder_guest_details.setVisible(false);
        } else {
            pnl_holder_guest_details.setVisible(true);
        }

    }

    private void set_visible() {
        btn_add_order.setVisible(false);
        btn_back.setVisible(false);
        btn_pay.setVisible(false);
        pnl_holder_guest_details.setVisible(false);
//        pnl_holder_guest_details.setVisible(false);
    }
    Popup popup;
    Popup popup2;
    Popup popup3;
    Popup popup_check;
    Popup popup_menu_admin;
    String user_id = "";

    private void hide_popups() {
        jLabel7.setVisible(false);
        lbl_or_no.setVisible(false);
        if (popup != null) {
            popup.hide();
        }
        if (popup2 != null) {
            popup2.hide();
        }
        if (popup3 != null) {
            popup3.hide();
        }
        if (popup_check != null) {
            popup_check.hide();
        }
        if (popup_menu_admin != null) {
            popup_menu_admin.hide();
        }
        clear_categories();
        clear_items();
        clear_room();
        clear_orders();
    }

    private void my_version() {
        String version = System.getProperty("version", "resto");
        System.out.println(version);
        if (to_users.user_level1 == null) {
            user_id = "6";
        } else if (to_users.user_level1.equals("0")) {
            user_id = "0";
        } else if (to_users.user_level1.equals("1")) {
            user_id = "1";

        } else if (to_users.user_level1.equals("5")) {
            user_id = "5";
        } else if (to_users.user_level1.equals("7")) {
            user_id = "7";
        } else {
            user_id = "6";
        }

        if (version.equals("retail")) {
            if (user_id.equals("1")) {
                clear_room();
                clear_categories();
                clear_items();
                pnl_holder_search.setVisible(true);
                pnl_category.setVisible(false);
            } else {
                lbl_next_customer.setVisible(true);
                if (user_id.equals("0")) {
                    btn_clear_all.setVisible(true);
                    pnl_holder_guest_details.setVisible(false);
                    btn_pay.setVisible(true);
                    pnl_category.setVisible(true);

                }
            }

        }
        if (version.equals("resto")) {
            if (user_id.equals("1")) {
                clear_room();
                clear_categories();
                clear_items();
                pnl_holder_search.setVisible(true);
            }
            if (user_id.equals("5")) {
                btn_logout.setVisible(false);
                clear_room();
                clear_categories();
                clear_items();
                btn_clear_all.setVisible(false);
                pnl_holder_guest_details.setVisible(true);
                pnl_category.setVisible(false);
                lbl_remit.setVisible(true);
                lbl_payment.setVisible(true);
            }
            if (user_id.equals("6")) {
                btn_logout.setVisible(false);
                clear_room();
                clear_categories();
                clear_items();
                btn_clear_all.setVisible(true);
                btn_pay.setVisible(true);
                pnl_holder_search.setVisible(false);
                pnl_holder_guest_details.setVisible(false);
                pnl_category.setVisible(true);
                lbl_payment.setVisible(false);
            }
        }

        if (version.equals("ordering")) {
            jLabel1.setVisible(false);
            lbl_payment.setVisible(false);
            lbl_guest_no.setVisible(false);
            jLabel11.setText("TABLE RATE:");
            jLabel14.setVisible(false);
            if (user_id.equals("1")) {
                pnl_holder_search.setVisible(true);
                lbl_next_customer.setVisible(false);
//                  pnl_category.setVisible(true);
            } else {
                pnl_holder_search.setVisible(false);
//                pnl_category.setVisible(false);
            }
            lbl_advance_payment.setVisible(false);
            if (user_id.equals("7")) {
                clear_room();
                clear_categories();
                clear_items();
                btn_clear_all.setVisible(false);
                pnl_holder_guest_details.setVisible(true);
                pnl_category.setVisible(false);

                jLabel3.setVisible(false);
                cb_guest.setVisible(false);
//                lbl_payment.setVisible(false);
            } else {
                jLabel3.setVisible(true);
                cb_guest.setVisible(true);
//                lbl_payment.setVisible(true);
            }

        }

        if (version.equals("endorsements")) {
            if (user_id.equals("1")) {
                clear_room();
                clear_categories();
                clear_items();
                pnl_holder_search.setVisible(true);
            }
            if (user_id.equals("0")) {
                btn_clear_all.setVisible(true);
            }
        }

        String ui = System.getProperty("ui", "resto_w_icon");

        if (ui.equals("resto_w_icon")) {
            js_orders.setVisible(false);
            js_items.setVisible(false);
            sp_orders.setVisible(true);
            sp_items.setVisible(true);
//            [415, 763]


        }
        if (ui.equals("resto_wo_icon")) {
            js_orders.setVisible(true);
            js_items.setVisible(true);
            sp_orders.setVisible(false);
            sp_items.setVisible(false);
            jButton2.setVisible(false);
            jButton1.setVisible(false);
        }
        if (ui.equals("barcode")) {
            pnl_holder_items.setVisible(false);
            sp_orders.setVisible(false);
            jButton9.setVisible(false);
            jButton8.setVisible(false);
            tf_barcode.setVisible(true);
            btn_pay.setVisible(true);
            btn_clear_all.setVisible(true);
        }
    }

    private void clear_room() {
        orders_model.clear();
        jg_orders.setModel(orders_model);
    }

    private void clear_categories() {
        cat_model.clear();
        jg_categories.setModel(cat_model);
    }

    private void clear_items() {
        item_model.clear();
        jg_items.setModel(item_model);
    }

    private void remove_pop_orders() {
        if (popup == null) {
        } else {
            popup.hide();
        }
    }

    private void remove_pop_items() {
        if (popup2 == null) {
        } else {
            popup2.hide();
        }
    }

    private void remove_pop_orders_cancel() {
        if (popup3 == null) {
        } else {
            popup3.hide();
        }
    }

    private void get_clicked_items() {
        remove_pop_items();
        int row = jg_items.getSelectedIndex();
        if (row < 0) {
            return;
        }
        Object j = item_model.getElementAt(row);
        S2_search.to_items t = (S2_search.to_items) j;

        int row_order = orders_model.size();
        int trap = 0;
        for (int i = 0; i < row_order; i++) {
            Object j_orders = orders_model.getElementAt(i);
            S2_search.to_orders t_orders = (S2_search.to_orders) j_orders;
            if (t.name.equals(t_orders.name)) {
                if (t.qty > 0) {
                    t_orders.setQty(t_orders.qty + input_qty);
                    t.setQty(t.qty - input_qty);
                    trap = 1;
                    init_orders_ref();
                    break;
                } else {
                    trap = 1;
                    break;
                }
            } else {
                trap = 0;
            }

        }
        if (trap == 0) {
            S2_search.to_orders t1 = new S2_search.to_orders(t.name, t.uom, t.desc, t.price, input_qty, t.img_path, t.qty2, new ArrayList(), 0, t.cat_id, t.category_name);
            init_orders(t1);
            t.setQty(t.qty - input_qty);
        }
        set_amount();
        order_count();
    }

    private void get_clicked_orders_cancel() {
        if (user_id.equals("1")) {
        } else {
            int row = jg_orders.getSelectedIndex();
            if (row >= 0) {
                Object j_orders = orders_model.getElementAt(row);
                S2_search.to_orders t_orders = (S2_search.to_orders) j_orders;
//        t_orders.setQty(input_qty2);

                double qty0 = t_orders.qty;
                int row_order = item_model.size();
                int trap = 0;
                for (int i = 0; i < row_order; i++) {
                    Object t_item = item_model.getElementAt(i);
                    S2_search.to_items t_items = (S2_search.to_items) t_item;
                    if (t_items.name.equals(t_orders.name)) {

                        t_orders.setQty(input_qty2);
                        double qty = qty0 - input_qty2;
                        t_items.setQty(t_items.qty + qty);
                        trap = 1;
                        break;
                    } else {
//                    trap==0;
                    }

                }
                init_orders_ref();
                update_qty_items();
                set_amount();
                order_count();
            }

        }

    }

    private void update_qty_items() {
        int row = orders_model.size();
        int row_items = item_model.size();
        String version = System.getProperty("version", "ordering");
        if (user_id.equals("6") || (user_id.equals("0") && version.equals("resto")) || (user_id.equals("0") && version.equals("retail"))) {
            for (int i = 0; i < row; i++) {
                Object j_orders = orders_model.getElementAt(i);
                S2_search.to_orders t_orders = (S2_search.to_orders) j_orders;

                for (int o = 0; o < row_items; o++) {
                    Object t_items = item_model.getElementAt(o);
                    S2_search.to_items t_item = (S2_search.to_items) t_items;
                    if (t_item.name.equals(t_orders.name)) {
//                    System.out.println(t_item.desc);
//                    JOptionPane.showMessageDialog(null, t_item.qty2 + " - "+t_orders.qty);C
                        t_item.setQty(t_item.qty2 - t_orders.qty);
                        break;
                    }
                }

            }
        }




    }

    private void get_clicked_category() {
        int row = jg_categories.getSelectedIndex();
        if (row < 0) {
            return;
        }
        Object j = cat_model.getElementAt(row);
        to_name_cat t = (to_name_cat) j;
//        init_orders(t);
        category_id = t.num;
        item_model.clear();
        if (popup2 != null) {
            popup2.hide();
        }
        if (popup3 != null) {
            popup3.hide();
        }


//        JOptionPane.showMessageDialog(null, t.num);
    }

    private void set_order_pop() {
        String versions = System.getProperty("version", "ordering");
        if (user_id.equals("6") || (user_id.equals("0") && versions.equals("resto")) || (user_id.equals("0") && versions.equals("retail"))) {
            final int row = jg_orders.getSelectedIndex();
            if (row < 0) {
                return;
            }
            Object j = orders_model.getElementAt(row);
            final S2_search.to_orders to = (S2_search.to_orders) j;

            Window p = (Window) this;
            Dlg_quantity_menu nd = Dlg_quantity_menu.create(p, true);
            nd.setTitle("");
            nd.do_pass_order(to);
//            JOptionPane.showMessageDialog(null, "adadad");
            nd.setCallback(new Dlg_quantity_menu.Callback() {

                @Override
                public void cancel(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                    closeDialog.ok();
                    edit_item(data.to_items, data.to_sub, data.to_pay);
                }

                @Override
                public void order(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                    closeDialog.ok();
                    order_item(data.to_items, data.to_sub, data.to_pay);
                }

                @Override
                public void remove(CloseDialog closeDialog) {
                    closeDialog.ok();
                    orders_model.remove(row);
                    jg_orders.setModel(orders_model);
                }
            });
            Center.setCenter(nd); //sp_items
            nd.setLocationRelativeTo(sp_cat);
            nd.setVisible(true);
        }
        if (user_id.equals("5") || user_id.equals("7") || (user_id.equals("0") && versions.equals("ordering"))) {
            int row = jg_orders.getSelectedIndex();
            if (row < 0) {
                return;
            }
            item_model.clear();
            jg_items.setModel(item_model);

            selected_guest.clear();
            init_items();
//            set_amount_items();
            pnl_holder_guest_details.setVisible(true);
            Object value = orders_model.getElementAt(row);
            final S2_search.to_rooms t = (S2_search.to_rooms) value;
            lbl_table_no.setText(t.room);
            List<Dlg_check.to_guests> datas = t.to_guest;
            List<String> guest = new ArrayList();
            final String version = System.getProperty("version", "ordering");
            if (version.equals("ordering")) {
                jLabel1.setVisible(false);
                lbl_guest_no.setVisible(false);
                List<String> aw = S1_guest.ret_cb_data();
                if (user_id.equals("7")) {
                    jLabel3.setVisible(false);
                    cb_guest.setVisible(false);
                } else {
                    jLabel3.setVisible(true);
                    cb_guest.setVisible(true);
                }
                for (String g : aw) {
                    guest.add(g);
                }
            } else {
                guest.add("ALL");
                for (Dlg_check.to_guests g : datas) {
                    guest.add(g.name);
                }
            }

            cb_guest.setModel(new ListComboBoxModel(guest));
            lbl_guest_no.setText("");
//            lbl_guest_no.setText(S1_cash_advance.get_guest_id(cb_guest.getSelectedItem().toString()));

            Window p = (Window) this;
            final Dlg_check nd = Dlg_check.create(p, true);
            nd.setTitle("");
            nd.do_pass(datas, t, user_id);
            nd.do_pass2(jg_orders, orders_model, row, t.id, t.type, t.percentage, user_id);
            nd.setCallback(new Dlg_check.Callback() {

                @Override
                public void cancel(CloseDialog closeDialog, Dlg_check.OutputData data) {
                }

                @Override
                public void check_in(CloseDialog closeDialog, Dlg_check.OutputData data) {
                    closeDialog.ok();
                    lbl_table_no.setText(t.id);
                    check_ins();
                }

                @Override
                public void check_out(CloseDialog closeDialog, Dlg_check.OutputData data) {
                    if (version.equals("ordering")) {
                        closeDialog.ok();
                        my_guest = data.to1;
                        payments(FitIn.fmt_wc_0(lbl_guest_total.getText()));
                    } else {
                        my_guest = data.to1;
                        payments(FitIn.fmt_wc_0(lbl_guest_total.getText()));
                    }
                }

                @Override
                public void order(CloseDialog closeDialog, Dlg_check.OutputData data) {
                    closeDialog.ok();
                    my_guest = data.to1;
                    lbl_table_no.setText(t.id);
//                    JOptionPane.showMessageDialog(null, my_guest.size());
                    tbl_id = t.id;
                    tbl_room_rate = t.room_rate;
                    tbl_topay = t.topay;
                    pnl_category.setVisible(true);
                    user_id = "6";
//                    lbl_table_no.setText(t.id);
                    btn_add_order.setVisible(true);
                    btn_back.setVisible(true);
                    item_model.clear();
                    jg_items.setModel(item_model);
                    init_cashier();
                    init_catogories();
                    pnl_holder_guest_details.setVisible(false);
                    clear_room();
                }

                @Override
                public void add_guest(CloseDialog closeDialog, Dlg_check.OutputData data) {
                    lbl_table_no.setText(t.id);
                    t.setPercentage(data.percentages);
                    clear_room();
                    init_rooms();

                }

                @Override
                public void set_order(CloseDialog closeDialog, Dlg_check.OutputData data) {
                    selected_guest = data.to1;

                    set_multiple_guest_orders();

                }
            });
            nd.setLocationRelativeTo(sp_orders);
            nd.setVisible(true);
        }
    }
    List<Dlg_check.to_guests> selected_guest = new ArrayList();

    private void set_guest_orders() {

        String version = System.getProperty("version", "ordering");
        if (version.equals("ordering") && user_id.equals("7")) {
            return;
        }
        int row = jg_orders.getSelectedIndex();
        if (row < 0) {
            return;
        }
        item_model.clear();
        jg_items.setModel(item_model);

        Object value = orders_model.getElementAt(row);
        S2_search.to_rooms t = (S2_search.to_rooms) value;
        List<S2_search.to_items> results = new ArrayList();
        String guest = cb_guest.getSelectedItem().
                toString();

        double advance = 0;
        if (guest.equals("ALL")) {
            lbl_guest_no.setText("");
            results = S2_search.ret_items_room(t.id);
            advance = S1_cash_advance.get_guest_advance_all(t.id, lbl_guest_no.getText());
        } else {
            lbl_guest_no.setText(S1_cash_advance.get_guest_id(cb_guest.getSelectedItem().toString()));
            advance = S1_cash_advance.get_guest_advance(t.id, lbl_guest_no.getText());
            results = S2_search.ret_guest_orders(t.id, guest);
        }
        String where_guest = "";
        String where_charge = "";
        int ii = 0;

        if (guest.equals("ALL")) {
            where_guest = where_guest + "where status='" + "0" + "' and table_no_id = '" + t.id + "'";
            where_charge = where_charge + "where status='" + "0" + "' and table_no = '" + t.id + "'";
        } else {
            where_guest = where_guest + " where table_no_id = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest + "%'";
            where_charge = where_charge + " where table_no = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest + "%'";
        }
        results = S2_search.ret_guest_orders_where(t.id, where_guest);

        double charge = S2_search.ret_guest_chargers_where(t.id, where_charge);

        int i = 0;

        lbl_check_date.setText(t.date_added);

        lbl_rate.setText(FitIn.fmt_wc_0(charge));
        System.out.println(charge + " aasdasdasd");
        double payment = 0;
        for (S2_search.to_items s : results) {
            S2_search.to_items to = new S2_search.to_items(s.name, s.uom, s.desc, s.price, s.qty, s.img_path, s.qty2, s.guest_id, s.cat_id, s.category_name);
            item_model.add(i, to);
            payment += s.qty * s.price;
            i++;
        }

        lbl_advance_payment.setText("" + advance);

//            
        lbl_oders_payment.setText(FitIn.fmt_wc_0(payment));
        lbl_guest_total.setText("" + ((payment + charge) - FitIn.toDouble(lbl_advance_payment.getText())));
//            
        lbl_guest_total.setText("" + (payment));
        jg_items.setModel(item_model);
        jg_items.setFixedCellDimension(170);
        jg_items.setHorizonztalMargin(4);
        jg_items.setVerticalMargin(10);
        jg_items.setCellBackground(Color.white);
        jg_items.setSelectionBackground(Color.lightGray);

        jg_items.getCellRendererManager().
                setDefaultRenderer(new Items());
    }

    private void set_multiple_guest_orders() {
        int row = jg_orders.getSelectedIndex();
        if (row < 0) {
            return;
        }
        item_model.clear();
        jg_items.setModel(item_model);
        Object value = orders_model.getElementAt(row);
        S2_search.to_rooms t = (S2_search.to_rooms) value;
        List<S2_search.to_items> results = new ArrayList();
        String guest = cb_guest.getSelectedItem().
                toString();
        String where_guest = "";
        String where_charge = "";
        String where_advance = "";
        int ii = 0;

        if (selected_guest.isEmpty()) {
            where_guest = where_guest + "where status='" + "0" + "' and table_no_id = '" + t.id + "'";
            where_charge = where_charge + "where status='" + "0" + "' and table_no = '" + t.id + "'";
            where_advance = where_advance + "where room_id='" + t.id + "'  and status='" + "0" + "'";

        }
        for (Dlg_check.to_guests guest1 : selected_guest) {
            if (ii == 0) {
                where_guest = where_guest + " where table_no_id = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest1.name + "%'";
                where_charge = where_charge + " where table_no = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest1.name + "%'";
                where_advance = where_advance + "where room_id='" + t.id + "'  and status='" + "0" + "' and guest_id='" + guest1.id + "'";
//                JOptionPane.showMessageDialog(null, guest1.id);
            } else {
                where_guest = where_guest + " or table_no_id = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest1.name + "%'";
                where_charge = where_charge + " or table_no = '" + t.id + "' and status<>'" + "1" + "' and guest_name like '%" + guest1.name + "%'";
                where_advance = where_advance + " or room_id='" + t.id + "'  and status='" + "0" + "' and guest_id='" + guest1.id + "'";
            }
            ii++;
        }

        results = S2_search.ret_guest_orders_where(t.id, where_guest);
        double advance = S1_cash_advance.get_guest_advance_where(where_advance);

        double charge = S2_search.ret_guest_chargers_where(t.id, where_charge);

        int i = 0;



//        System.out.println(charge + " aasdasdasd");
        double payment = 0;
        for (S2_search.to_items s : results) {
            S2_search.to_items to = new S2_search.to_items(s.name, s.uom, s.desc, s.price, s.qty, s.img_path, s.qty2, s.guest_id, s.cat_id, s.category_name);
            item_model.add(i, to);
            payment += s.qty * s.price;
            i++;
        }
//            
        if (System.getProperty("version", "ordering").equals("ordering")) {
            charge = 0;
            lbl_advance_payment.setText("0");
            lbl_guest_no.setText(t.guest_id);
            lbl_check_date.setText(t.date_added);
            lbl_rate.setText("0");
        } else {

            lbl_advance_payment.setText("" + advance);
            lbl_guest_no.setText(t.guest_id);
            lbl_check_date.setText(t.date_added);
            lbl_rate.setText(FitIn.fmt_wc_0(charge));
        }
        lbl_oders_payment.setText(FitIn.fmt_wc_0(payment));
        lbl_guest_total.setText("" + ((payment + charge) - FitIn.toDouble(lbl_advance_payment.getText())));

        jg_items.setModel(item_model);
        jg_items.setFixedCellDimension(170);
        jg_items.setHorizonztalMargin(4);
        jg_items.setVerticalMargin(10);
        jg_items.setCellBackground(Color.white);
        jg_items.setSelectionBackground(Color.lightGray);

        jg_items.getCellRendererManager().
                setDefaultRenderer(new Items());
    }

    private void edit_item(to_items to_items1, List<to_items_status> to_sub, double to_pay) {
        int row = jg_orders.getSelectedIndex();
        if (row < 0) {
            return;
        }
        Object j = orders_model.getElementAt(row);
        final S2_search.to_orders to = (S2_search.to_orders) j;

        DefaultListModel orders_model_new = new DefaultListModel();
//        orders_model_new = orders_model;
        to.setQty(to_items1.qty);
        to.setTo_sub(to_sub);
        to.setAmount_to_pay(to_pay);

        jg_orders.setModel(orders_model);
        set_amount();
        order_count();
        sp_orders.updateUI();
    }

    private void set_item_pop() {
        if (user_id.equals("6") || user_id.equals("0")) {
            int row = jg_items.getSelectedIndex();
            if (row < 0) {
                return;
            }
            Object j = item_model.getElementAt(row);
            final S2_search.to_items to = (S2_search.to_items) j;
            final S2_search.to_items to_items = new S2_search.to_items(to.name, to.uom, to.desc, to.price, to.qty, to.img_path, to.qty, to.guest_id, to.cat_id, to.category_name);
            List<S2_search.to_items_status> to_sub = new ArrayList();
            Window p = (Window) this;
            Dlg_quantity_menu nd = Dlg_quantity_menu.create(p, true);
            nd.setTitle("");
            nd.do_pass(to_items, to_sub, 1, "-1", to.cat_id);
            nd.setCallback(new Dlg_quantity_menu.Callback() {

                @Override
                public void cancel(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                }

                @Override
                public void order(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                    closeDialog.ok();
                    order_item(data.to_items, data.to_sub, data.to_pay);
                }

                @Override
                public void remove(CloseDialog closeDialog) {
                }
            });
            Center.setCenter(nd); //sp_items

            nd.setLocationRelativeTo(sp_items);
            nd.setVisible(true);

        }

        if (user_id.equals("5")) {
            final int row = jg_items.getSelectedIndex();
            if (row < 0) {
                return;
            }
            Object j = item_model.getElementAt(row);
            final S2_search.to_items to = (S2_search.to_items) j;
            String name = to.name;
            String uom = to.uom;
            String desc = to.desc;
            double price = to.price;
            double qty = to.qty;
            String img_path = to.img_path;
            double qty2 = to.qty2;
            String cat_id = to.cat_id;
            List<S2_search.to_items_status> to_sub = S2_assembly.ret_data_table(to.name, lbl_table_no.getText());
            double amount_to_pay = 0;
            S2_search.to_orders to1 = new S2_search.to_orders(name, uom, desc, price, qty, img_path, qty2, to_sub, amount_to_pay, cat_id, to.category_name);
            Window p = (Window) this;
            Dlg_quantity_menu nd = Dlg_quantity_menu.create(p, true);
            nd.setTitle("");

            nd.do_pass_order(to1);
            nd.setCallback(new Dlg_quantity_menu.Callback() {

                @Override
                public void cancel(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                }

                @Override
                public void order(CloseDialog closeDialog, Dlg_quantity_menu.OutputData data) {
                    closeDialog.ok();
                    order_item(data.to_items, data.to_sub, data.to_pay);
                }

                @Override
                public void remove(CloseDialog closeDialog) {
                    item_model.remove(row);
                    jg_items.setModel(item_model);
                }
            });
            Center.setCenter(nd); //sp_items

            nd.setLocationRelativeTo(sp_items);
            nd.setVisible(true);

        }
    }

    private void order_item(to_items to_items1, List<to_items_status> to_sub, double to_pay) {
        int row = jg_items.getSelectedIndex();
        if (row < 0) {
            return;
        }
        Object j = item_model.getElementAt(row);
        final S2_search.to_items to = (S2_search.to_items) j;
        final S2_search.to_items to_items = new S2_search.to_items(to.name, to.uom, to.desc, to.price, to.qty, to.img_path, to.qty, to.guest_id, to.cat_id, to.category_name);


        int row_order = orders_model.size();
        int trap = 0;
        for (int i = 0; i < row_order; i++) {
            Object j_orders = orders_model.getElementAt(i);
            S2_search.to_orders t_orders = (S2_search.to_orders) j_orders;
            if (to_items.name.equals(t_orders.name)) {
                if (to_items.qty > 0) {
                    t_orders.setQty(t_orders.qty + to_items1.qty);
                    to_items.setQty(to_items.qty - to_items1.qty);
                    trap = 1;
                    init_orders_ref();
                    break;
                } else {
                    trap = 1;
                    break;
                }
            } else {
                trap = 0;
            }

        }
        if (trap == 0) {
            S2_search.to_orders t1 = new S2_search.to_orders(to_items1.name, to_items1.uom, to_items1.desc, to_items1.price, to_items1.qty, to_items1.img_path, to_items1.qty2, to_sub, to_pay, to_items1.cat_id, to_items1.category_name);
//                        JOptionPane.showMessageDialog(null, to_items1.qty);
            init_orders(t1);
            to.setQty(to.qty - to_items1.qty);
        } else {
            to.setQty(to.qty - to_items1.qty);
        }
        sp_items.updateUI();
        set_amount();
        order_count();
    }

    private void set_orders_cancel_pop() {
        if (popup3 == null) {
            popup2.hide();
        } else {
            popup2.hide();
            popup3.hide();
        }

        int row = jg_orders.getSelectedIndex();
        if (row < 0) {
            return;
        }
        Rectangle bounds = jg_orders.getCellBounds(row);

        PopupFactory factory = PopupFactory.getSharedInstance();
        int x = bounds.x;
        int y = bounds.y;
        popup3 = factory.getPopup(this, popup_orders_cancel(), x + 100, y + 300);
        popup3.show();
    }
    int menu_remove = 0;

    private void set_menu_popup() {

        String version = System.getProperty("version", "retail");

        if (user_id.equals("1") && version.equals("retail")) {
            if (menu_remove == 0) {
                Point bounds = btn_menu.getLocationOnScreen();

                PopupFactory factory = PopupFactory.getSharedInstance();
                int x = bounds.x - 850;
                int y = bounds.y - 100;
//                JOptionPane.showMessageDialog(null, );
                popup_menu_admin = factory.getPopup(this, popup_menu_admin_su(), x, y);
                popup_menu_admin.show();
                menu_remove = 1;
            } else {
                popup_menu_admin.hide();
                menu_remove = 0;
            }
        }
        if (user_id.equals("1") && version.equals("resto") || user_id.equals("1") && version.equals("ordering")) {
            if (menu_remove == 0) {
                Point bounds = btn_menu.getLocationOnScreen();

                PopupFactory factory = PopupFactory.getSharedInstance();
                int x = bounds.x - 850;
                int y = bounds.y - 100;
//                JOptionPane.showMessageDialog(null, );
                popup_menu_admin = factory.getPopup(this, popup_menu_admin(), x, y);
                popup_menu_admin.show();
                menu_remove = 1;
            } else {
                popup_menu_admin.hide();
                menu_remove = 0;
            }
        }

//        JOptionPane.showMessageDialog(null, user_id);
        if (user_id.equals("0") && version.equals("retail")) {
            if (menu_remove == 0) {
                Point bounds = btn_menu.getLocationOnScreen();

                PopupFactory factory = PopupFactory.getSharedInstance();
                int x = bounds.x - 850;
                int y = bounds.y - 100;
//                JOptionPane.showMessageDialog(null, );
                popup_menu_admin = factory.getPopup(this, popup_menu_su_cashier(), x, y);
                popup_menu_admin.show();
                menu_remove = 1;
            } else {
                popup_menu_admin.hide();
                menu_remove = 0;
            }
        }


    }

    private void max2() {
//        if (btn_orders.getText().equals("-")) {
//            pnl_holder_orders.setVisible(false);
//            btn_orders.setText("+");
//        } else {
//            pnl_holder_orders.setVisible(true);
//            btn_orders.setText("-");
//        }
    }

    private void init_cashier() {
        tf_search.selectAll();
    }

    public static class to_details {

        public final String logo;
        public final String name;
        public final double qty;
        public final double price;

        public to_details(String logo, String name, double qty, double price) {
            this.logo = logo;
            this.name = name;
            this.qty = qty;
            this.price = price;
        }
    }
    DefaultListModel item_model = new DefaultListModel();
    List<to_details> d = new ArrayList();
    String category_id = "";

    private void init_rooms() {

        String img_path = System.getProperty("img_path", ImgPath.getPath());
        String version = System.getProperty("version", "ordering");
        img_path += "img_templates\\item_img\\";
        if (user_id.equals("5") || user_id.equals("7") || (user_id.equals("0") && version.equals("ordering"))) {
            List<S5_tables.to_tables2> room = S5_tables.get_tables();
//            String version = System.getProperty("version", "ordering");
            String names = "ROOM";
            if (version.equals("ordering")) {
                names = "TABLE";
            }
            for (S5_tables.to_tables2 t : room) {
                S2_search.to_rooms to = new S2_search.to_rooms(t.no, names, "" + t.name, t.status, t.amount, t.guest_id, t.guest_name, t.date_added, t.name, t.rate, t.to_guest, t.rate_type, t.percentage);
//                System.out.println(Arrays.asList(t.to_guest));
                orders_model.addElement(to);
            }

            jg_orders.setModel(orders_model);
            jg_orders.setFixedCellDimension(120);
            jg_orders.setHorizonztalMargin(4);
            jg_orders.setVerticalMargin(10);
            jg_orders.setCellBackground(Color.white);
            jg_orders.setSelectionBackground(Color.LIGHT_GRAY);

            jg_orders.getCellRendererManager().
                    setDefaultRenderer(new Rooms());
        }
        if (user_id.equals("6") || (user_id.equals("0") && version.equals("retail"))) {
            orders_model.clear();
            clear_room();
            String table_no = lbl_table_no.getText();
            List<S2_search.to_items> datas = new ArrayList();
//               List<S2_search.to_items> datas = S2_search.ret_items_room(table_no);
            for (S2_search.to_items t : datas) {
                S2_search.to_orders to = new S2_search.to_orders(t.name, t.uom, t.desc, t.price, t.qty, img_path, t.qty, new ArrayList(), -1, t.cat_id, t.category_name);
                orders_model.addElement(to);
            }
            jg_orders.setModel(orders_model);
            jg_orders.setFixedCellDimension(170);
            jg_orders.setHorizonztalMargin(4);
            jg_orders.setVerticalMargin(10);
            jg_orders.setCellBackground(Color.white);
            jg_orders.setSelectionBackground(Color.LIGHT_GRAY);
            jg_orders.getCellRendererManager().
                    setDefaultRenderer(new Orders());
        }

    }

    private void init_items() {

        String version = System.getProperty("version", "ordering");
        if (user_id.equals("6") || (user_id.equals("0") && version.equals("resto")) || (user_id.equals("0") && version.equals("retail"))) {
            item_model.clear();
            jg_items.setModel(item_model);
            String search = tf_search.getText();
            if (search.isEmpty() && category_id.isEmpty()) {
                return;
            }
            List<S2_search.to_items> results = S2_search.ret_items(category_id, search);
            int i = 0;
            for (S2_search.to_items s : results) {
                S2_search.to_items to = new S2_search.to_items(s.name, s.uom, s.desc, s.price, s.qty, s.img_path, s.qty2, s.guest_id, s.cat_id, s.category_name);
                item_model.add(i, to);
                i++;
            }
            jg_items.setModel(item_model);
            jg_items.setFixedCellDimension(170);
            jg_items.setHorizonztalMargin(4);
            jg_items.setVerticalMargin(10);
            jg_items.setCellBackground(Color.white);
            jg_items.setSelectionBackground(Color.lightGray);
            jg_items.getCellRendererManager().
                    setDefaultRenderer(new Items());
        }
        if (user_id.equals("5") || user_id.equals("7") || (user_id.equals("0") && version.equals("ordering"))) {
            int row = jg_orders.getSelectedIndex();
            if (row < 0) {
                return;
            }
            Object value = orders_model.getElementAt(row);
            S2_search.to_rooms t = (S2_search.to_rooms) value;
            List<S2_search.to_items> results = S2_search.ret_items_room(t.id);
            int i = 0;

            lbl_guest_no.setText(t.guest_id);
            lbl_check_date.setText(t.date_added);
            double charge = S2_search.ret_guest_chargers_where_all(t.id);
            double payment = 0;
            for (S2_search.to_items s : results) {
                S2_search.to_items to = new S2_search.to_items(s.name, s.uom, s.desc, s.price, s.qty, s.img_path, s.qty2, s.guest_id, s.cat_id, s.category_name);
                item_model.add(i, to);
                payment += s.qty * s.price;
                i++;
            }
            String table_id = (t.id);
//            JOptionPane.showMessageDialog(null, table_id + " = " + t.id);
//            JOptionPane.showMessageDialog(null, user_id + " "+version);
            double advance = S1_cash_advance.get_guest_advance_all(table_id, lbl_guest_no.getText());
            if ((user_id.equals("7") && version.equals("ordering")) || (user_id.equals("0") && version.equals("ordering"))) {
                charge = 0;
                advance = 0;
                lbl_rate.setText("0");

            } else {
                lbl_advance_payment.setText("" + advance);
                lbl_rate.setText(FitIn.fmt_wc_0(charge));

                lbl_amount.setText(FitIn.fmt_wc_0(payment + charge));
                lbl_order_count.setText("" + item_model.size());
            }

            lbl_oders_payment.setText(FitIn.fmt_wc_0(payment));
            lbl_guest_total.setText(FitIn.fmt_wc_0((payment + charge) - advance));

            jg_items.setModel(item_model);
            jg_items.setFixedCellDimension(170);
            jg_items.setHorizonztalMargin(4);
            jg_items.setVerticalMargin(10);
            jg_items.setCellBackground(Color.white);
            jg_items.setSelectionBackground(Color.lightGray);
            jg_items.getCellRendererManager().
                    setDefaultRenderer(new Items());
        }

    }
    DefaultListModel cat_model = new DefaultListModel();

    // <editor-fold defaultstate="collapsed" desc="Scroll">
    private void do_down_cat() {
//            tbl_endorsements.scrollRectToVisible(tbl_endorsements.getCellRect(j, 0, false));
        sp_cat.transferFocusDownCycle();
        sp_cat.getVerticalScrollBar().
                setValue(sp_cat.getVerticalScrollBar().
                getValue() + sp_cat.getVerticalScrollBar().
                getBlockIncrement() + 500);
//      
    }

    private void do_up_cat() {
        sp_cat.transferFocusUpCycle();
        sp_cat.getVerticalScrollBar().
                setValue(sp_cat.getVerticalScrollBar().
                getValue() - sp_cat.getVerticalScrollBar().
                getBlockIncrement() - 500);
    }

    private void do_down_orders() {
//            tbl_endorsements.scrollRectToVisible(tbl_endorsements.getCellRect(j, 0, false));
        sp_orders.transferFocusDownCycle();
        sp_orders.getVerticalScrollBar().
                setValue(sp_orders.getVerticalScrollBar().
                getValue() + sp_orders.getVerticalScrollBar().
                getBlockIncrement() + 500);
//      
    }

    private void do_up_orders() {
        sp_orders.transferFocusUpCycle();
        sp_orders.getVerticalScrollBar().
                setValue(sp_orders.getVerticalScrollBar().
                getValue() - sp_orders.getVerticalScrollBar().
                getBlockIncrement() - 500);
    }

    private void do_down_items() {
//            tbl_endorsements.scrollRectToVisible(tbl_endorsements.getCellRect(j, 0, false));
        sp_items.transferFocusDownCycle();
        sp_items.getVerticalScrollBar().
                setValue(sp_items.getVerticalScrollBar().
                getValue() + sp_items.getVerticalScrollBar().
                getBlockIncrement() + 500);
//      
    }

    private void do_up_items() {
        sp_items.transferFocusUpCycle();
        sp_items.getVerticalScrollBar().
                setValue(sp_items.getVerticalScrollBar().
                getValue() - sp_items.getVerticalScrollBar().
                getBlockIncrement() - 500);
    }
    // </editor-fold>

    private void init_catogories() {

//        JOptionPane.showMessageDialog(null, user_id);
        if (user_id.equals("1")) {
        }
        if (user_id.equals("5")) {
//            String img_path = System.getProperty("img_path", "C:\\Users\\Dummy\\img_templates\\category_img\\");
//
//            to_name_cat to = new to_name_cat("RESTO", "0", img_path + "drinks.jpeg");
//            to_name_cat to2 = new to_name_cat("MANAGE", "1", img_path + "JavaIcon.jpg");
//            cat_model.add(0, to);
//            cat_model.add(1, to2);
//
//
//            jg_categories.setModel(cat_model);
//
//            jg_categories.setFixedCellDimension(150);
////        jg_categories.set
//            jg_categories.setHorizonztalMargin(5);
//            jg_categories.setVerticalMargin(5);
//            jg_categories.setCellBackground(Color.white);
//            jg_categories.setSelectionBackground(Color.LIGHT_GRAY);
////        jg_categories.setModel(cat_model);
//            jg_categories.getCellRendererManager().
//                    setDefaultRenderer(new Categories());
            clear_categories();
        }
        if (user_id.equals("6") || user_id.equals("0") || user_id.equals("5")) {
//            pnl_category.setVisible(true);
            String img_path = System.getProperty("img_path", ImgPath.getPath());
//            System.out.println(img_path + " ---------------- ");
            img_path = img_path + "img_templates\\category_img\\";
            String cat_id = "";
//            JOptionPane.showMessageDialog(null, user_id);
            if (System.getProperty("version", "resto").equals("resto") && user_id.equals("6")) {
                cat_id = "10";
            }
            List<to_name_cat> results = S1_categories.ret_categories(cat_id);

            int i = 0;
            for (to_name_cat s : results) {

                to_name_cat to = new to_name_cat(s.name, s.num, img_path + s.img_path);
                cat_model.add(i, to);
                i++;
            }
            jg_categories.setModel(cat_model);

            jg_categories.setFixedCellDimension(150);
//        jg_categories.set
            jg_categories.setHorizonztalMargin(5);
            jg_categories.setVerticalMargin(5);
            jg_categories.setCellBackground(Color.white);
            jg_categories.setSelectionBackground(Color.LIGHT_GRAY);
//        jg_categories.setModel(cat_model);
            jg_categories.getCellRendererManager().
                    setDefaultRenderer(new Categories());
        }

    }
    DefaultListModel orders_model = new DefaultListModel();

    private void init_orders(S2_search.to_orders to) {

//        for (int i = 0; i < 20; i++) {
//            to_details to = new to_details("/POS/img3/back3.png", "NAME", 100, 100);
        orders_model.addElement(to);
//        }

        jg_orders.setModel(orders_model);
//        jg_items.setSize(100, 100);
//        jg_orders.setSize(new Dimension(170, 170));

//        jg_orders.setPreferredSize(new Dimension(400, 400));
        jg_orders.setFixedCellDimension(170);

        jg_orders.setHorizonztalMargin(4);
        jg_orders.setVerticalMargin(10);
        jg_orders.setCellBackground(Color.white);
        jg_orders.setSelectionBackground(Color.LIGHT_GRAY);

        jg_orders.getCellRendererManager().
                setDefaultRenderer(new Orders());

    }

    private void init_orders_ref() {

        jg_orders.setModel(orders_model);

        jg_orders.setFixedCellDimension(170);
        jg_orders.setPreferredSize(new Dimension(400, 400));
        jg_orders.setHorizonztalMargin(4);
        jg_orders.setVerticalMargin(10);
        jg_orders.setCellBackground(Color.white);
        jg_orders.setSelectionBackground(Color.LIGHT_GRAY);

        jg_orders.getCellRendererManager().
                setDefaultRenderer(new Orders());
    }

    // <editor-fold defaultstate="collapsed" desc="Items">
    public static class Items extends JPanel implements GridCellRenderer {

        private static final long serialVersionUID = 1L;

        @Override
        public Component getGridCellRendererComponent(JGrid grid,
                Object value, int index, boolean isSelected,
                boolean cellHasFocus) {
//            if (value != null && value instanceof Color) {
//                this.setBackground((Color) value);
//            }


            JXLabel lbl_qty = new JXLabel();

            JXLabel lbl_price = new JXLabel();
            JXLabel lbl_prod_name = new JXLabel();
            JLabel ip_img = new JLabel();

//            String img_path = System.getProperty("img_path", "C:\\Users\\Dummy\\img_templates\\item_img\\");
            String img_path = System.getProperty("img_path", ImgPath.getPath());
            img_path = img_path + "img_templates\\item_img\\";
            S2_search.to_items t = (S2_search.to_items) value;
//            System.out.println(t.logo + "");
            JPanel jPanel11 = new javax.swing.JPanel() {

                @Override
                public void paintComponent(Graphics og) {
                    super.paintComponent(og);

//                    Graphics2D g = (Graphics2D) og;
//
//                    GradientPaint gradient = new GradientPaint(0, 100, Color.white, 0, 0, Color.white, true);
//
//                    g.setPaint(gradient);
//                    g.fillRoundRect(0, 0, 470, 255, 30, 30);

                }
            };
            jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            lbl_qty.setBackground(new java.awt.Color(0, 0, 0));
            lbl_qty.setForeground(new java.awt.Color(255, 255, 255));
            lbl_qty.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 0), new java.awt.Color(255, 0, 0)));
            lbl_qty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_qty.setText(FitIn.fmt_wc_0(t.qty));
            lbl_qty.setOpaque(true);
            jPanel11.add(lbl_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 30));

            lbl_price.setBackground(new java.awt.Color(0, 153, 255));
            lbl_price.setForeground(new java.awt.Color(255, 255, 255));
            lbl_price.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_price.setText("P " + FitIn.fmt_wc_0(t.price));
            lbl_price.setOpaque(true);
            jPanel11.add(lbl_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 70, 30));
//
            lbl_prod_name.setBackground(new java.awt.Color(255, 255, 255));
            lbl_prod_name.setForeground(new java.awt.Color(0, 0, 0));
            lbl_prod_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            lbl_prod_name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            lbl_prod_name.setText(Wrapper.wrap(t.desc, 27));
//            lbl_prod_name.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N

            lbl_prod_name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
            lbl_prod_name.setOpaque(true);
            lbl_prod_name.setVerticalAlignment(javax.swing.SwingConstants.TOP);
//            lbl_prod_name.setLineWrap(true);
            jPanel11.add(lbl_prod_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 170, 40));


//            System.out.println(t.img_path);
//            jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            ip_img.setIcon(new javax.swing.ImageIcon(img_path + t.img_path)); // NOI18N
//              ip_img.setIcon(new javax.swing.ImageIcon("/home/i1/img_templates/item_img/asd.jpeg")); // NOI18N
            File f = new File(img_path + t.img_path);
            BufferedImage img;
            try {
                img = ImageIO.read(f);
                int width = 200; //jLabel3.getWidth();
                int height = 170; //jLabel3.getHeight();
                BufferedImage scaledImage = new BufferedImage(width, height, BufferedImage.OPAQUE);
                Graphics2D graphics2D = scaledImage.createGraphics();
                graphics2D.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION,
                        RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED);
                graphics2D.drawImage(img, 0, 0, width, height, null);
                graphics2D.dispose();
                ImageIcon myIcon = new ImageIcon(scaledImage);
                ip_img.setIcon(myIcon);
            } catch (IOException ex) {
//                throw new RuntimeException(ex);
            }

            jPanel11.add(ip_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 170));

            return jPanel11;
        }
    }

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Categories">
    public static class Categories extends JPanel implements GridCellRenderer {

        private static final long serialVersionUID = 1L;

        @Override
        public Component getGridCellRendererComponent(JGrid grid,
                Object value, int index, boolean isSelected,
                boolean cellHasFocus) {
//            if (value != null && value instanceof Color) {
//                this.setBackground((Color) value);
//            }

            JLabel jLabel10 = new javax.swing.JLabel();

            JLabel jLabel12 = new javax.swing.JLabel();
            JLabel jLabel14 = new javax.swing.JLabel();

            to_name_cat t = (to_name_cat) value;

            JPanel jPanel11 = new javax.swing.JPanel() {

                @Override
                public void paintComponent(Graphics og) {
                    super.paintComponent(og);

                    Graphics2D g = (Graphics2D) og;
//                    GradientPaint gradient = new GradientPaint(0, 100, Color.white, 0, 0, Color.white, true);
//                    g.setPaint(gradient);
                    g.fillRoundRect(0, 0, 470, 255, 30, 30);

                }
            };
            jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            jLabel14.setBackground(java.awt.Color.red);
            jLabel14.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
            jLabel14.setForeground(new java.awt.Color(255, 255, 255));
            jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel14.setText(t.name);
            jLabel14.setOpaque(true);
            jPanel11.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 30));

            jLabel12.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
            jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel12.setIcon(new javax.swing.ImageIcon(t.img_path)); // NOI18N
            File f = new File(t.img_path);
            BufferedImage img;
            try {
                img = ImageIO.read(f);
                int width = 200; //jLabel3.getWidth();
                int height = 170; //jLabel3.getHeight();
                BufferedImage scaledImage = new BufferedImage(width, height, BufferedImage.OPAQUE);
                Graphics2D graphics2D = scaledImage.createGraphics();
                graphics2D.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION,
                        RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED);
                graphics2D.drawImage(img, 0, 0, width, height, null);
                graphics2D.dispose();
                ImageIcon myIcon = new ImageIcon(scaledImage);
                jLabel12.setIcon(myIcon);
            } catch (IOException ex) {
//               return;
            }

            jPanel11.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 170));


            return jPanel11;
        }
    }

    // </editor-fold>
    // <editor-fold defaultstate="collapsed" desc="Orders">
    public static class Orders extends JPanel implements GridCellRenderer {

        private static final long serialVersionUID = 1L;

        @Override
        public Component getGridCellRendererComponent(JGrid grid,
                Object value, int index, boolean isSelected,
                boolean cellHasFocus) {
//            if (value != null && value instanceof Color) {
//                this.setBackground((Color) value);
//            }

            JXLabel lbl_qty = new JXLabel();

            JXLabel lbl_price = new JXLabel();
            JXLabel lbl_prod_name = new JXLabel();
            JLabel ip_img = new JLabel();
            String img_path = System.getProperty("img_path", ImgPath.getPath());
            img_path += "img_templates\\item_img\\";

            S2_search.to_orders t = (S2_search.to_orders) value;
//            System.out.println(t.logo + "");
            JPanel jPanel11 = new javax.swing.JPanel() {

                @Override
                public void paintComponent(Graphics og) {
                    super.paintComponent(og);

                    Graphics2D g = (Graphics2D) og;

                    GradientPaint gradient = new GradientPaint(0, 100, Color.white, 0, 0, Color.white, true);

                    g.setPaint(gradient);
                    g.fillRoundRect(0, 0, 470, 255, 30, 30);

                }
            };

            jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            lbl_qty.setBackground(new java.awt.Color(0, 0, 0));
            lbl_qty.setForeground(new java.awt.Color(255, 255, 255));
            lbl_qty.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 51), new java.awt.Color(255, 51, 0), new java.awt.Color(255, 0, 0)));
            lbl_qty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_qty.setText(FitIn.fmt_wc(t.qty));
            lbl_qty.setOpaque(true);
            jPanel11.add(lbl_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 30));

            lbl_price.setBackground(new java.awt.Color(0, 153, 255));
            lbl_price.setForeground(new java.awt.Color(255, 255, 255));
            lbl_price.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_price.setText("P " + FitIn.fmt_wc_0(t.amount_to_pay));
            lbl_price.setOpaque(true);
            jPanel11.add(lbl_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 70, 30));

            lbl_prod_name.setBackground(new java.awt.Color(255, 255, 255));
            lbl_prod_name.setForeground(new java.awt.Color(0, 0, 0));
            lbl_prod_name.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            lbl_prod_name.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            lbl_prod_name.setText(Wrapper.wrap(t.desc, 27));
            lbl_prod_name.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
//            lbl_prod_name.setLineWrap(true);
            lbl_prod_name.setOpaque(true);
            lbl_prod_name.setVerticalAlignment(javax.swing.SwingConstants.TOP);

            jPanel11.add(lbl_prod_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 170, 40));

//            String im = t.img_path;
//            if (im.equals("") || im.equals("asd.jpeg")) {
//                im = "siopao.jpeg";
//            }
//            System.out.println(img_path+ " - " +im);           
//            jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            ip_img.setIcon(new javax.swing.ImageIcon(img_path + t.img_path)); // NOI18N
            File f = new File(img_path + t.img_path);
            BufferedImage img;
            try {
                img = ImageIO.read(f);
                int width = 200; //jLabel3.getWidth();
                int height = 170; //jLabel3.getHeight();
                BufferedImage scaledImage = new BufferedImage(width, height, BufferedImage.OPAQUE);
                Graphics2D graphics2D = scaledImage.createGraphics();
                graphics2D.setRenderingHint(RenderingHints.KEY_ALPHA_INTERPOLATION,
                        RenderingHints.VALUE_ALPHA_INTERPOLATION_SPEED);
                graphics2D.drawImage(img, 0, 0, width, height, null);
                graphics2D.dispose();
                ImageIcon myIcon = new ImageIcon(scaledImage);
                ip_img.setIcon(myIcon);
            } catch (IOException ex) {
//                return "siopao.jpeg"; System.out.println(im);
//                throw new RuntimeException(img_path + " - " + t.img_path + " - " + ex);
            }

            jPanel11.add(ip_img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 170));

            return jPanel11;
        }
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Rooms">
    public static class Rooms extends JPanel implements GridCellRenderer {

        private static final long serialVersionUID = 1L;

        @Override
        public Component getGridCellRendererComponent(JGrid grid,
                Object value, int index, boolean isSelected,
                boolean cellHasFocus) {
//            if (value != null && value instanceof Color) {
//                this.setBackground((Color) value);
//            }

            JLabel lbl_name = new javax.swing.JLabel();
            JLabel lbl_num = new javax.swing.JLabel();
            JLabel lbl_status = new javax.swing.JLabel();
            JLabel lbl_topay = new JLabel();
            JXLabel lbl_p_name = new JXLabel();
            S2_search.to_rooms t = (S2_search.to_rooms) value;
//            System.out.println(t.logo + "");
            JPanel jPanel11 = new javax.swing.JPanel() {

                @Override
                public void paintComponent(Graphics og) {
                    super.paintComponent(og);

                    Graphics2D g = (Graphics2D) og;

                    GradientPaint gradient = new GradientPaint(0, 100, Color.white, 0, 0, Color.white, true);

                    g.setPaint(gradient);
                    g.fillRoundRect(0, 0, 470, 255, 30, 30);

                }
            };

            jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            lbl_name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
            lbl_name.setForeground(java.awt.Color.red);
            lbl_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_name.setText(t.name);
            jPanel11.add(lbl_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, -1));

            lbl_num.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            lbl_num.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_num.setText(t.num);
            jPanel11.add(lbl_num, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 100, 33));
            lbl_topay.setBackground(new java.awt.Color(0, 0, 0));
            lbl_topay.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            lbl_topay.setForeground(java.awt.Color.green);
            lbl_topay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_topay.setText(FitIn.fmt_wc_0(t.room_rate));
            lbl_topay.setOpaque(true);
            jPanel11.add(lbl_topay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 120, -1));

            lbl_status.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            lbl_status.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            lbl_status.setText(t.status);
            jPanel11.add(lbl_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 120, -1));
            if (!t.status.equals("AVAILABLE")) {
                lbl_name.setForeground(java.awt.Color.red);
                lbl_num.setForeground(java.awt.Color.red);
            }



            return jPanel11;
        }
    }
    // </editor-fold>

    // <editor-fold defaultstate="collapsed" desc="Popup">
    private JPanel popup() {
        JPanel pnl = new JPanel();
        final JLabel bt = new JLabel();
        final JLabel bt2 = new JLabel();
        pnl.setBackground(new java.awt.Color(255, 255, 255));
        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bt.setBackground(new java.awt.Color(91, 88, 88));
        bt.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        bt.setForeground(new java.awt.Color(255, 255, 255));
        bt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bt.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img3/delete-minus.png"))); // NOI18N
        bt.setText("CANCEL");
        bt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        bt.setOpaque(true);
        bt.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {

                bt2.setBackground(new java.awt.Color(91, 88, 88));
                bt.setBackground(new java.awt.Color(72, 160, 249));
                popup.hide();
                if (popup3 != null) {
                    popup3.hide();
                }
                cancel_order();
            }
        });
        pnl.add(bt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 180, 50));

        bt2.setBackground(new java.awt.Color(91, 88, 88));
        bt2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        bt2.setForeground(new java.awt.Color(255, 255, 255));
        bt2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bt2.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img3/edit-pencil.png"))); // NOI18N
        bt2.setText("EDIT");
        bt2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        bt2.setOpaque(true);
        bt2.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt2.setBackground(new java.awt.Color(72, 160, 249));
                bt.setBackground(new java.awt.Color(91, 88, 88));
                popup.hide();
                set_orders_cancel_pop();

//                update_qty_items();
            }
        });
        pnl.add(bt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 50));


        return pnl;
    }

    private JPanel popup_menu_admin() {
        JPanel pnl = new JPanel();
        JButton btn_logout = new javax.swing.JButton();
        JButton btn_standby = new javax.swing.JButton();
        JLabel lb_standby = new javax.swing.JLabel();
        JLabel lb_logout = new javax.swing.JLabel();
        JButton btn_add_product = new javax.swing.JButton();
        JLabel lb_add_product = new javax.swing.JLabel();
        JButton btn_discount = new javax.swing.JButton();
        JLabel lb_endorsement2 = new javax.swing.JLabel();
        JButton btn_report = new javax.swing.JButton();
        JLabel lb_report = new javax.swing.JLabel();
        JButton btn_tables1 = new javax.swing.JButton();
        JLabel lb_tables1 = new javax.swing.JLabel();
        JButton btn_voider = new javax.swing.JButton();
        JLabel lb_inventory1 = new javax.swing.JLabel();
        JButton btn_register_users = new javax.swing.JButton();
        JLabel lb_users = new javax.swing.JLabel();


        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnl.setBackground(new java.awt.Color(255, 255, 255));

        btn_logout.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out2.png"))); // NOI18N
        btn_logout.setBorderPainted(false);
        btn_logout.setContentAreaFilled(false);
        btn_logout.setFocusable(false);
        btn_logout.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out button-MO.png"))); // NOI18N
        btn_logout.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
//                btn_logoutActionPerformed(evt);
                logout();
            }
        });
        pnl.add(btn_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 110, -1));

        btn_standby.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by.png"))); // NOI18N
        btn_standby.setBorderPainted(false);
        btn_standby.setContentAreaFilled(false);
        btn_standby.setFocusable(false);
        btn_standby.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by-MO.png"))); // NOI18N
        btn_standby.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_login("");
            }
        });
        pnl.add(btn_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, -1, 70));

        lb_standby.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_standby.setForeground(new java.awt.Color(41, 9, 149));
        lb_standby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_standby.setText("STANDBY");
        lb_standby.setFocusable(false);
        pnl.add(lb_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 100, 20));

        lb_logout.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_logout.setForeground(new java.awt.Color(41, 9, 149));
        lb_logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_logout.setText("LOGOUT");
        lb_logout.setFocusable(false);
        pnl.add(lb_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 110, -1));

        btn_add_product.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/inventory.png"))); // NOI18N
        btn_add_product.setBorderPainted(false);
        btn_add_product.setContentAreaFilled(false);
        btn_add_product.setFocusable(false);
        btn_add_product.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/inventory-mo.png"))); // NOI18N
        btn_add_product.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_add_product();
            }
        });
        pnl.add(btn_add_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, -1, 80));

        lb_add_product.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_add_product.setForeground(new java.awt.Color(41, 9, 149));
        lb_add_product.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_add_product.setText("INVENTORY");
        lb_add_product.setFocusable(false);
        pnl.add(lb_add_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 100, -1));

        btn_discount.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/discount.png"))); // NOI18N
        btn_discount.setBorderPainted(false);
        btn_discount.setContentAreaFilled(false);
        btn_discount.setFocusable(false);
        btn_discount.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/discount-MO.png"))); // NOI18N
        btn_discount.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_discount();
            }
        });
        pnl.add(btn_discount, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 90, 80));

        lb_endorsement2.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_endorsement2.setForeground(new java.awt.Color(41, 9, 149));
        lb_endorsement2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_endorsement2.setText("DISCOUNT");
        lb_endorsement2.setFocusable(false);
        pnl.add(lb_endorsement2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 90, -1));

        btn_report.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/reports.png"))); // NOI18N
        btn_report.setBorderPainted(false);
        btn_report.setContentAreaFilled(false);
        btn_report.setFocusable(false);
        btn_report.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/reports-MO.png"))); // NOI18N
        btn_report.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                reports();
            }
        });
        pnl.add(btn_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 80, 80));

        lb_report.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_report.setForeground(new java.awt.Color(41, 9, 149));
        lb_report.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_report.setText("REPORT");
        lb_report.setFocusable(false);
        pnl.add(lb_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 80, 20));

        btn_tables1.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/table.png"))); // NOI18N
        btn_tables1.setBorderPainted(false);
        btn_tables1.setContentAreaFilled(false);
        btn_tables1.setFocusable(false);
        btn_tables1.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/table-MO.png"))); // NOI18N
        btn_tables1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
//               
                rooms();
            }
        });
        pnl.add(btn_tables1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 80, 80));

        lb_tables1.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_tables1.setForeground(new java.awt.Color(41, 9, 149));
        lb_tables1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tables1.setText("ROOMS");
        lb_tables1.setFocusable(false);
        pnl.add(lb_tables1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 80, -1));

        btn_voider.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/void.png"))); // NOI18N
        btn_voider.setBorderPainted(false);
        btn_voider.setContentAreaFilled(false);
        btn_voider.setFocusable(false);
        btn_voider.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/void-MO.png"))); // NOI18N
        btn_voider.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                voider();
            }
        });
        pnl.add(btn_voider, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 90, 80));

        lb_inventory1.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_inventory1.setForeground(new java.awt.Color(41, 9, 149));
        lb_inventory1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_inventory1.setText("VOIDER");
        lb_inventory1.setFocusable(false);
        pnl.add(lb_inventory1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 90, -1));

        btn_register_users.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/users.png"))); // NOI18N
        btn_register_users.setBorderPainted(false);
        btn_register_users.setContentAreaFilled(false);
        btn_register_users.setFocusable(false);
        btn_register_users.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/users-MO.png"))); // NOI18N
        btn_register_users.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
//                btn_register_usersActionPerformed(evt);
                do_register_users();
            }
        });
        pnl.add(btn_register_users, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 70, 80));

        lb_users.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_users.setForeground(new java.awt.Color(41, 9, 149));
        lb_users.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_users.setText("USERS");
        lb_users.setFocusable(false);
        pnl.add(lb_users, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 70, -1));

        return pnl;
    }

    private JPanel popup_menu_su_cashier() {
        JPanel pnl = new JPanel();
        JLabel lb_standby = new JLabel();
        JLabel lb_logout = new JLabel();
        JLabel lb_pen = new JLabel();
        JButton btn_pending = new JButton();
        JLabel lb_pending = new JLabel();
        JButton btn_standby = new JButton();
        JButton btn_logout = new JButton();
        pnl.setLayout(new AbsoluteLayout());

        btn_logout.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out2.png"))); // NOI18N
        btn_logout.setBorderPainted(false);
        btn_logout.setContentAreaFilled(false);
        btn_logout.setFocusable(false);
        btn_logout.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out button-MO.png"))); // NOI18N
        btn_logout.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_login("");
            }
        });
        pnl.add(btn_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 110, -1));

        btn_standby.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by.png"))); // NOI18N
        btn_standby.setBorderPainted(false);
        btn_standby.setContentAreaFilled(false);
        btn_standby.setFocusable(false);
        btn_standby.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by-MO.png"))); // NOI18N
        btn_standby.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_login("");
            }
        });
        pnl.add(btn_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, -1, 70));

        lb_standby.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_standby.setForeground(new java.awt.Color(41, 9, 149));
        lb_standby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_standby.setText("STANDBY");
        lb_standby.setFocusable(false);
        pnl.add(lb_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 100, 20));

        lb_logout.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_logout.setForeground(new java.awt.Color(41, 9, 149));
        lb_logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_logout.setText("LOGOUT");
        lb_logout.setFocusable(false);
        pnl.add(lb_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 110, -1));

//        pnl.setBackground(new java.awt.Color(255, 255, 255));
//        pnl.add(lb_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 90, 100));

        lb_pen.setBackground(new java.awt.Color(251, 200, 213));
        lb_pen.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        lb_pen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_pen.setText("0");
        lb_pen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lb_pen.setFocusable(false);
        lb_pen.setOpaque(true);
        lb_pen.setText(FitIn.fmt_wc(S3_getpending.get_pending_count()));
        pnl.add(lb_pen, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 30, 30));

        btn_pending.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/pending.png"))); // NOI18N
        btn_pending.setBorderPainted(false);
        btn_pending.setContentAreaFilled(false);
        btn_pending.setFocusable(false);
        btn_pending.setEnabled(false);
        btn_pending.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/pending-MO.png"))); // NOI18N
        btn_pending.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_show_pending();
            }
        });
        pnl.add(btn_pending, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        lb_pending.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_pending.setForeground(new java.awt.Color(41, 9, 149));
        lb_pending.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_pending.setText("PENDING");
        lb_pending.setFocusable(false);
        pnl.add(lb_pending, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, -1, -1));
        return pnl;
    }

    private JPanel popup_menu_admin_su() {
        JPanel pnl = new JPanel();
        JButton btn_logout = new javax.swing.JButton();
        JButton btn_standby = new javax.swing.JButton();
        JLabel lb_standby = new javax.swing.JLabel();
        JLabel lb_logout = new javax.swing.JLabel();
        JButton btn_add_product = new javax.swing.JButton();
        JLabel lb_add_product = new javax.swing.JLabel();
        JButton btn_discount = new javax.swing.JButton();
        JLabel lb_endorsement2 = new javax.swing.JLabel();
        JButton btn_report = new javax.swing.JButton();
        JLabel lb_report = new javax.swing.JLabel();
        JButton btn_tables1 = new javax.swing.JButton();
        JLabel lb_tables1 = new javax.swing.JLabel();
        JButton btn_voider = new javax.swing.JButton();
        JLabel lb_inventory1 = new javax.swing.JLabel();
        JButton btn_register_users = new javax.swing.JButton();
        JLabel lb_users = new javax.swing.JLabel();


        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        btn_logout.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out2.png"))); // NOI18N
        btn_logout.setBorderPainted(false);
        btn_logout.setContentAreaFilled(false);
        btn_logout.setFocusable(false);
        btn_logout.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/log-out button-MO.png"))); // NOI18N
        btn_logout.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                logout();
            }
        });
        pnl.add(btn_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 110, -1));

        btn_standby.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by.png"))); // NOI18N
        btn_standby.setBorderPainted(false);
        btn_standby.setContentAreaFilled(false);
        btn_standby.setFocusable(false);
        btn_standby.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/stand-by-MO.png"))); // NOI18N
        btn_standby.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_login("");
            }
        });
        pnl.add(btn_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, -1, 70));

        lb_standby.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_standby.setForeground(new java.awt.Color(41, 9, 149));
        lb_standby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_standby.setText("STANDBY");
        lb_standby.setFocusable(false);
        pnl.add(lb_standby, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 100, 20));

        lb_logout.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_logout.setForeground(new java.awt.Color(41, 9, 149));
        lb_logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_logout.setText("LOGOUT");
        lb_logout.setFocusable(false);
        pnl.add(lb_logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, 110, -1));

        btn_add_product.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/inventory.png"))); // NOI18N
        btn_add_product.setBorderPainted(false);
        btn_add_product.setContentAreaFilled(false);
        btn_add_product.setFocusable(false);
        btn_add_product.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/inventory-mo.png"))); // NOI18N
        btn_add_product.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_add_product();
            }
        });
        pnl.add(btn_add_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, -1, 80));

        lb_add_product.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_add_product.setForeground(new java.awt.Color(41, 9, 149));
        lb_add_product.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_add_product.setText("INVENTORY");
        lb_add_product.setFocusable(false);
        pnl.add(lb_add_product, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 100, -1));

        btn_discount.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/discount.png"))); // NOI18N
        btn_discount.setBorderPainted(false);
        btn_discount.setContentAreaFilled(false);
        btn_discount.setFocusable(false);
        btn_discount.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/discount-MO.png"))); // NOI18N
        btn_discount.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_discount();
            }
        });
        pnl.add(btn_discount, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 90, 80));

        lb_endorsement2.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_endorsement2.setForeground(new java.awt.Color(41, 9, 149));
        lb_endorsement2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_endorsement2.setText("DISCOUNT");
        lb_endorsement2.setFocusable(false);
        pnl.add(lb_endorsement2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 80, 90, -1));

        btn_report.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/reports.png"))); // NOI18N
        btn_report.setBorderPainted(false);
        btn_report.setContentAreaFilled(false);
        btn_report.setFocusable(false);
        btn_report.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/reports-MO.png"))); // NOI18N
        btn_report.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                reports();
            }
        });
        pnl.add(btn_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 80, 80));

        lb_report.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_report.setForeground(new java.awt.Color(41, 9, 149));
        lb_report.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_report.setText("REPORT");
        lb_report.setFocusable(false);
        pnl.add(lb_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 80, 20));

        btn_register_users.setIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/users.png"))); // NOI18N
        btn_register_users.setBorderPainted(false);
        btn_register_users.setContentAreaFilled(false);
        btn_register_users.setFocusable(false);
        btn_register_users.setRolloverIcon(new javax.swing.ImageIcon(getClass().
                getResource("/POS/img2/users-MO.png"))); // NOI18N
        btn_register_users.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup_menu_admin.hide();
                do_register_users();
            }
        });
        pnl.add(btn_register_users, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 70, 80));

        lb_users.setFont(new java.awt.Font("DejaVu Sans", 1, 14)); // NOI18N
        lb_users.setForeground(new java.awt.Color(41, 9, 149));
        lb_users.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_users.setText("USERS");
        lb_users.setFocusable(false);
        pnl.add(lb_users, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 70, 20));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        pnl.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 90, 100));

        return pnl;
    }
    // </editor-fold>
    ArrayListModel tbl_orders_ALM = new ArrayListModel();

    private void do_show_pending() {
        tbl_orders_ALM.clear();
//       

        Window w = (Window) this;
        Dlg_pending d = Dlg_pending.create(w, true);
        d.setTitle("Pending");
        int size = orders_model.size();
//        JOptionPane.showMessageDialog(null, size);
        List<to_order> datas = new ArrayList();
        List<S2_search.to_orders> data = new ArrayList();
        for (int i = 0; i < size; i++) {
            Object j = orders_model.getElementAt(i);
            final S2_search.to_orders t = (S2_search.to_orders) j;
            to_order to = new to_order(t.desc, t.price, t.qty, t.uom, t.name, t.qty, "-1", t.cat_id, t.category_name);
            data.add(t);
            datas.add(to);

        }

//        tbl_orders_ALM.addAll(datas);
        S2_update_pending.update_2(name11, tbl_orders_ALM, data);

        d.pass(tbl_orders_ALM, name11);
//         tbl_orders_ALM.clear();
//         tbl_orders_M.fireTableDataChanged();
        d.setCallback(new Dlg_pending.Callback() {

            @Override
            public void ok(CloseDialog cd, Dlg_pending.OutputData data) {
                cd.ok();
                process_retrieve_pending(cd, data);
            }

            @Override
            public void add(CloseDialog closeDialog, Dlg_pending.OutputDataAdd data) {

                closeDialog.ok();
            }

            @Override
            public void delete(CloseDialog closeDialog, Dlg_pending.Data data) {
                closeDialog.ok();

            }
        });

//        Application.locateOnParentCenter(w, d);
        Center.setCenter(d);
        d.setVisible(true);
    }

    private void process_retrieve_pending(CloseDialog cd, Dlg_pending.OutputData data) {
//        cd.ok();

        List<to_order> to_orders = S15_save_new_pen_orders.retrieve_pending_db(data.selected_customer);
        for (to_order t : to_orders) {
            S2_search.to_orders to = new S2_search.to_orders(t.code, t.uom, t.product_name, t.unit_price, t.quantity, "", t.quantity, tbl_orders_ALM, input_qty, t.cat_id, t.category_name);
        }

//            loadData(to_orders);

        name11 = data.selected_customer;

//        JOptionPane.showMessageDialog(null, name11);
    }

    private void process_add_pending(CloseDialog closeDialog, Dlg_pending.OutputDataAdd data) {

        List<to_order> to_orders = tbl_orders_ALM;
        S15_save_new_pen_orders.do_add_pending(data.customer_added, to_orders);
        closeDialog.ok();
//        clear();

    }
    private String name11 = "";

    // <editor-fold defaultstate="collapsed" desc="Menu Controls">
    private void do_register_users() {

        Window p = (Window) this;
        Dlg_user_registration nd = Dlg_user_registration.create(p, true);
        nd.setTitle("");
//        nd.do_pass();
        nd.setCallback(new Dlg_user_registration.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_user_registration.OutputData data) {
//                closeDialog.ok();
            }
        });
        Center.setCenter(nd);

        nd.setVisible(true);
    }

    private void voider() {
        Window p = (Window) this;
        Dlg_voider nd = Dlg_voider.create(p, true);
        nd.setTitle("Voider");
//        nd.pass(date);
        nd.setCallback(new Dlg_voider.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_voider.OutputData data) {
//                closeDialog.ok();
//                get_category_for_btn();
//                set_first_category();
            }
        });
        Center.setCenter(nd);

        nd.setVisible(true);
    }

    private void rooms() {
        Window p = (Window) this;
        Dlg_table nd = Dlg_table.create(p, true);
        nd.setTitle("");
//        nd.pass(date);
        nd.setCallback(new Dlg_table.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_table.OutputData data) {
//                closeDialog.ok();
//                get_category_for_btn();
//                set_first_category();
            }
        });
        Center.setCenter(nd);

        nd.setVisible(true);
    }

    private void reports() {
        String version = System.getProperty("version", "retail");
//         JOptionPane.showMessageDialog(null, cashiering_for);

        if (version.equals("endorsements")) {
            Window p = (Window) this;
            Dlg_report_endorsements nd = Dlg_report_endorsements.create(p, true);
            nd.setTitle("");
            nd.do_pass("");
            nd.setCallback(new Dlg_report_endorsements.Callback() {

                @Override
                public void ok(CloseDialog closeDialog, Dlg_report_endorsements.OutputData data) {
//                        closeDialog.ok();
                }
            });
            Center.setCenter(nd);

            nd.setVisible(true);
        } else {
            Window p = (Window) this;
            Dlg_report2 nd = Dlg_report2.create(p, true);
            nd.setTitle("");
            nd.do_pass("");
            nd.setCallback(new Dlg_report2.Callback() {

                @Override
                public void ok(CloseDialog closeDialog, Dlg_report2.OutputData data) {
//                        closeDialog.ok();
                }
            });
            Center.setCenter(nd);

            nd.setVisible(true);
        }

    }

    private void do_discount() {
        Window p = (Window) this;
        Dlg_add_discount nd = Dlg_add_discount.create(p, true);
        nd.setTitle("");
//        nd.pass(date);
        nd.setCallback(new Dlg_add_discount.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_add_discount.OutputData data) {
//                closeDialog.ok();
            }
        });
        Center.setCenter(nd);

        nd.setVisible(true);
    }

    private void do_add_product() {

        Window w = (Window) this;
        Dlg_add nd = Dlg_add.create(w, true);
        nd.setTitle("");
        nd.do_pass();
        nd.setCallback(new Dlg_add.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_add.OutputData data) {
//                closeDialog.ok();
//                do_set_button_product_names(flip_no);
//                get_category_for_btn();
//                set_first_category();
            }
        });

        FullScreen.do_max_normal(nd);
    }

    public void do_login(final String name) {
        final String names = System.getProperty("entityName", "Synapse Software Tech");
        Window w = (Window) this;
        Dlg_login1 d = Dlg_login1.create(w, true);
        d.setTitle("Login");

        d.setCallback(new Dlg_login1.Callback() {

            @Override
            public void ok(CloseDialog cd, Dlg_login1.OutputData data) {
                cd.ok();
                process_login_ok(data);

            }

            @Override
            public void show_login_again(CloseDialog closeDialog) {
                closeDialog.ok();
                do_login(names);
            }

            private void process_login_ok(OutputData data) {
                String name = S3_insert_new_user.get_name(data.un);
                lbl_cashier_name.setText(name);
                int user_level = S12_retval_user_level.get_user_level(data.un);
                to_users.setUser_level1("" + user_level);
                to_users.setUsername1(name);
                myInit();
            }
        });
        Center.setCenter(d);
        d.setVisible(true);

    }

    private void logout() {
//        JOptionPane.showMessageDialog(null,to_users.user_level1);

        if (user_id.equals("1")) {
            do_logout2();
        } else {
            do_logout();
        }
    }

    private void do_logout() {
        String user_name = lbl_cashier_name.getText();
        Window w = (Window) this;
        Dlg_logout d = Dlg_logout.create(w, true);
        d.setTitle("Logout?");
        d.pass1(to_users.username1);
        d.setCallback(new Dlg_logout.Callback() {

            @Override
            public void ok(CloseDialog cd, Dlg_logout.OutputData data) {
                System.exit(1);
            }
        });

        Application.locateOnParentCenter(w, d);
        d.pass(user_name);
        d.setVisible(true);

    }

    private void do_logout2() {

        Window w = (Window) this;
        Dlg_log_out_admin d = Dlg_log_out_admin.create(w, true);
        d.setTitle("Logout?");
        d.setCallback(new Dlg_log_out_admin.Callback() {

            @Override
            public void ok(CloseDialog cd, Dlg_log_out_admin.OutputData data) {
                System.exit(1);

            }
        });

        Application.locateOnParentCenter(w, d);

        d.setVisible(true);

    }
    // </editor-fold>

    private JPanel popup_check() {
        JPanel pnl = new JPanel();
        JButton btn_p_close = new javax.swing.JButton();
        JButton btn_p_check = new javax.swing.JButton();
        JButton btn_p_order = new javax.swing.JButton();
        JButton btn_p_cancel = new javax.swing.JButton();
        JXLabel lbl_p_name = new JXLabel();

        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        int row = jg_orders.getSelectedIndex();

        Object value = orders_model.getElementAt(row);
        final S2_search.to_rooms t = (S2_search.to_rooms) value;
        String status = "";
        if (t.status.equals("AVAILABLE")) {
            status = "CHECK-IN";
        } else {
            status = "CHECK-OUT";
        }

        btn_p_close.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_p_close.setText("CLOSE");
        btn_p_close.setFocusable(false);
        pnl.add(btn_p_close, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 150, 50));
        btn_p_close.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                popup_check.hide();
                lbl_table_no.setText("0");
            }
        });
        btn_p_check.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_p_check.setText(status);
        btn_p_check.setFocusable(false);
        pnl.add(btn_p_check, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 50));
        btn_p_check.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                lbl_table_no.setText(t.id);
                check_ins();
            }
        });

        btn_p_order.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_p_order.setText("ORDER");
        btn_p_order.setFocusable(false);
        if (t.status.equals("AVAILABLE")) {
            btn_p_order.setEnabled(false);
        }
        pnl.add(btn_p_order, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 150, 50));
        btn_p_order.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                user_id = "6";
                lbl_table_no.setText(t.id);
                btn_add_order.setVisible(true);
                btn_back.setVisible(true);

                init_cashier();
                init_items();
                init_catogories();
                pnl_holder_guest_details.setVisible(false);
                clear_room();
                popup_check.hide();
//                init_rooms();
            }
        });

        btn_p_cancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_p_cancel.setText("CANCEL");
        btn_p_cancel.setFocusable(false);
        if (t.status.equals("AVAILABLE")) {
            btn_p_cancel.setEnabled(false);
        }
        btn_p_cancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                lbl_table_no.setText(t.id);
            }
        });

        pnl.add(btn_p_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 150, 50));

        lbl_p_name.setForeground(new java.awt.Color(255, 255, 255));
        lbl_p_name.setBackground(new java.awt.Color(0, 153, 255));
        lbl_p_name.setText(t.guest_name);
        lbl_p_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_name.setIconTextGap(10);
        lbl_p_name.setOpaque(true);
        lbl_p_name.setTextRotation((90 * Math.PI / 180)); // 45 degrees in radian.
        lbl_p_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_p_name.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnl.add(lbl_p_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 0, 20, 200));
        return pnl;
    }
    String tbl_id = "-1";
    double tbl_room_rate = 0;
    double tbl_topay = 0;

    private void check_ins_ordering() {
        String version = System.getProperty("version", "ordering");
//        int row = jg_orders.getSelectedIndex();
//        JOptionPane.showMessageDialog(null, row+" sss");
//        if (row < 0) {
//            return;
//        }
//        Object value = orders_model.getElementAt(row);
//        final S2_search.to_rooms t = (S2_search.to_rooms) value;
        int id = -1;
        String guest_id = "-1";
        String fname = "Walk-In";
        String lname = "";
        String mi = "";
        String country = "";
        String email_address = "";
        int status = 0;
        String diver_cert_lvl = "0";
        String contact_no = "0";
        String emergency_contact_name = "0";
        String passport_no = "0";
        String remarks = "0";
        String how = "0";
        int newsletter = 0;
        S1_guest.to_guests to = new S1_guest.to_guests(id, guest_id, fname, lname, mi, country, email_address, status, diver_cert_lvl, contact_no, emergency_contact_name, passport_no, remarks, how, newsletter);
        List<S1_guest.to_guests> datas = new ArrayList();
        datas.add(to);
        String id1 = "0";
        String table_no = tbl_id;
//            JOptionPane.showMessageDialog(null, "guest");
        String date_added = DateType.datetime.format(new Date());
        double amount = tbl_topay;
        String or_no = "0";
        String status1 = "0";
        S1_check_in.to_customer_tables to1 = new S1_check_in.to_customer_tables(id1, table_no, date_added, amount, or_no, status1);
        S1_check_in.check_in(to1, datas, tbl_room_rate, 0);

        clear_room();
        init_rooms();
    }

    private void check_ins() {
        String version = System.getProperty("version", "ordering");
        if (version.equals("ordering")) {
            check_ins_ordering();
        } else {
            int row = jg_orders.getSelectedIndex();
            if (row < 0) {
                return;
            }
            Object value = orders_model.getElementAt(row);
            final S2_search.to_rooms t = (S2_search.to_rooms) value;
            if (!t.status.equals("AVAILABLE")) {
//            JOptionPane.showMessageDialog(null, "CHECK OUT?");
                payments(FitIn.fmt_wc_0(t.topay));
            } else {
                Window p = (Window) this;
                Dlg_guest nd = Dlg_guest.create(p, true);
                nd.setTitle("");
                nd.do_pass(version, t.id, t.type, t.percentage);
                nd.setCallback(new Dlg_guest.Callback() {

                    @Override
                    public void ok(CloseDialog closeDialog, Dlg_guest.OutputData data) {
                        closeDialog.ok();
                        t.setPercentage(data.percentages);
                        String id = "0";
                        String table_no = t.id;
                        String date_added = DateType.datetime.format(new Date());
                        double amount = t.topay;
                        String or_no = "0";
                        String status = "0";
                        S1_check_in.to_customer_tables to = new S1_check_in.to_customer_tables(id, table_no, date_added, amount, or_no, status);
                        S1_check_in.check_in(to, data.to1, t.room_rate, 0);
//                    popup_check.hide();
                        clear_room();
                        init_rooms();

                    }
                });
                Center.setCenter(nd);

                nd.setVisible(true);
            }
        }
    }

    private JPanel popup_items() {

        JPanel pnl = new JPanel();
        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        pnl.setPreferredSize(new java.awt.Dimension(229, 299));
        final JLabel lbl_p_qty = new javax.swing.JLabel();
        final JButton lbl_p_3 = new javax.swing.JButton();
        final JButton lbl_p_1 = new javax.swing.JButton();
        final JButton lbl_p_2 = new javax.swing.JButton();
        final JButton lbl_p_4 = new javax.swing.JButton();
        final JButton lbl_p_5 = new javax.swing.JButton();
        final JButton lbl_p_6 = new javax.swing.JButton();
        final JButton lbl_p_7 = new javax.swing.JButton();
        final JButton lbl_p_8 = new javax.swing.JButton();
        final JButton lbl_p_c = new javax.swing.JButton();
        final JButton lbl_p_0 = new javax.swing.JButton();
        final JButton lbl_p_9 = new javax.swing.JButton();
        final JButton lbl_p_go = new javax.swing.JButton();
        final JButton lbl_p_dot = new javax.swing.JButton();
        final JButton lbl_p_x = new javax.swing.JButton();
        lbl_p_qty.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_qty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_p_qty.setText("");
        lbl_p_qty.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnl.add(lbl_p_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 210, 40));



        lbl_p_1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        lbl_p_1.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("1");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });

        lbl_p_1.setText("1");
        pnl.add(lbl_p_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 70, 50));

        lbl_p_3.setText("3");
        lbl_p_3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("3");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_3.setText("3");
        pnl.add(lbl_p_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 70, 50));


        lbl_p_2.setText("2");
        lbl_p_2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("2");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_2.setText("2");
        pnl.add(lbl_p_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 70, 50));

        lbl_p_4.setText("4");
        lbl_p_4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("4");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_4.setText("4");
        pnl.add(lbl_p_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, 50));

        lbl_p_5.setText("5");
        lbl_p_5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("5");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_5.setText("5");
        pnl.add(lbl_p_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 70, 50));

        lbl_p_6.setText("6");
        lbl_p_6.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("6");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_6.setText("6");
        pnl.add(lbl_p_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 70, 50));

        lbl_p_7.setText("7");
        lbl_p_7.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("7");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_7.setText("7");
        pnl.add(lbl_p_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 70, 50));





        lbl_p_8.setText("8");
        lbl_p_8.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("8");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_8.setText("8");
        pnl.add(lbl_p_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 70, 50));

        lbl_p_c.setText("C");
        lbl_p_c.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_p_qty.setText("");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_c.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_c.setText("CL");
        pnl.add(lbl_p_c, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 70, 50));


        lbl_p_0.setText("0");
        lbl_p_0.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("0");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_0.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_0.setText("0");
        pnl.add(lbl_p_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 70, 50));

        lbl_p_9.setText("9");
        lbl_p_9.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("9");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        lbl_p_9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_9.setText("9");
        pnl.add(lbl_p_9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 70, 50));

        lbl_p_go.setText(">");
        lbl_p_go.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popup2.hide();
//                popup3.hide();
                input_qty = FitIn.toDouble(lbl_p_qty.getText());
                get_clicked_items();
            }
        });

        lbl_p_go.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_go.setText("OK");
        pnl.add(lbl_p_go, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 130, 40));



        lbl_p_dot.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_dot.setText(".");
        lbl_p_dot.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty(".");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_dot, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 70, 50));

        lbl_p_x.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_x.setText("X");
        lbl_p_x.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                popup2.hide();
                input_qty = 0;
            }
        });
        pnl.add(lbl_p_x, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 80, 40));


        return pnl;
    }

    private JPanel popup_orders_cancel() {

        JPanel pnl = new JPanel();
        pnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        final JLabel lbl_p_qty = new javax.swing.JLabel();
        final JButton lbl_p_3 = new javax.swing.JButton();
        final JButton lbl_p_1 = new javax.swing.JButton();
        final JButton lbl_p_2 = new javax.swing.JButton();
        final JButton lbl_p_4 = new javax.swing.JButton();
        final JButton lbl_p_5 = new javax.swing.JButton();
        final JButton lbl_p_6 = new javax.swing.JButton();
        final JButton lbl_p_7 = new javax.swing.JButton();
        final JButton lbl_p_8 = new javax.swing.JButton();
        final JButton lbl_p_c = new javax.swing.JButton();
        final JButton lbl_p_0 = new javax.swing.JButton();
        final JButton lbl_p_9 = new javax.swing.JButton();
        final JButton lbl_p_go = new javax.swing.JButton();

        lbl_p_qty.setBackground(new java.awt.Color(0, 0, 0));
        lbl_p_qty.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lbl_p_qty.setForeground(java.awt.Color.green);
        lbl_p_qty.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_p_qty.setOpaque(true);
        pnl.add(lbl_p_qty, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 30));



        lbl_p_1.setText("1");
        lbl_p_1.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("1");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });

        pnl.add(lbl_p_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 70, 50));

        lbl_p_3.setText("3");
        lbl_p_3.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("3");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 70, 50));


        lbl_p_2.setText("2");
        lbl_p_2.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("2");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 70, 50));

        lbl_p_4.setText("4");
        lbl_p_4.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("4");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 70, 50));

        lbl_p_5.setText("5");
        lbl_p_5.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("5");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 70, 50));

        lbl_p_6.setText("6");
        lbl_p_6.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("6");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 70, 50));

        lbl_p_7.setText("7");
        lbl_p_7.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("7");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 70, 50));

        lbl_p_8.setText("8");
        lbl_p_8.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("8");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 70, 50));

        lbl_p_c.setText("C");
        lbl_p_c.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_p_qty.setText("");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_c, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 70, 50));

        lbl_p_0.setText("0");
        lbl_p_0.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("0");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 70, 50));

        lbl_p_9.setText("9");
        lbl_p_9.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_qty("9");
            }

            public void set_qty(String string) {
                lbl_p_qty.setText(lbl_p_qty.getText() + string);
            }
        });
        pnl.add(lbl_p_9, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, 70, 50));

        lbl_p_go.setText(">");
        lbl_p_go.addActionListener(new java.awt.event.ActionListener() {

            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_qty2 = FitIn.toDouble(lbl_p_qty.getText());
                popup3.hide();
                popup2.hide();

                get_clicked_orders_cancel();

            }
        });

        lbl_p_go.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_p_go.setText("OK");
        pnl.add(lbl_p_go, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 130, 40));




        return pnl;
    }
    double input_qty = 0;
    double input_qty2 = 0;

    private void cancel_order() {
        int row = jg_orders.getSelectedIndex();
        if (row < 0) {
            return;
        }
        orders_model.removeElementAt(row);
        jg_orders.setModel(orders_model);
        init_orders_ref();
        set_amount();
        order_count();
    }

    private void set_amount() {
        int row = orders_model.size();
        double amount = 0;
        for (int i = 0; i < row; i++) {
            Object j_orders = orders_model.getElementAt(i);
            S2_search.to_orders t_orders = (S2_search.to_orders) j_orders;
            amount += t_orders.qty * t_orders.amount_to_pay;
        }
        lbl_amount.setText(FitIn.fmt_wc_0(amount));
        lbl_next_customer.setText(FitIn.fmt_wc_0(amount));
    }

    private void set_amount_items() {
        int row = item_model.size();
        double amount = 0;
        for (int i = 0; i < row; i++) {
            Object j_orders = item_model.getElementAt(i);
            S2_search.to_items t_orders = (S2_search.to_items) j_orders;
            amount += t_orders.qty * t_orders.price;
        }
        lbl_amount.setText(FitIn.fmt_wc_0(amount));
    }

    private void clear_order() {
        orders_model.clear();
        init_orders_ref();

        set_amount();
        order_count();
    }

    private void order_count() {
        int rows = orders_model.getSize();
        lbl_order_count.setText("" + rows);
    }

    private void payments(String payment) {
        if (orders_model.isEmpty()) {
            return;
        }
        List<to_order> data_orders = new ArrayList();
        if (lbl_table_no.getText().
                equals("0")) {
            for (int i = 0; i < orders_model.size(); i++) {
                Object j = orders_model.getElementAt(i);
                S2_search.to_orders t = (S2_search.to_orders) j;
                String product_name = t.desc;
                double unit_price = t.price;
                double quantity = t.qty;
                String uom = t.uom;
                String code = t.name;
                double hd_uom = t.qty;
                to_order to = new to_order(product_name, unit_price, quantity, uom, code, hd_uom, "-1", t.cat_id, t.category_name);
                data_orders.add(to);
            }
        } else {
            for (int i = 0; i < item_model.size(); i++) {
                Object j = item_model.getElementAt(i);

                S2_search.to_items t = (S2_search.to_items) j;
                String product_name = t.desc;
                double unit_price = t.price;
                double quantity = t.qty;
                String uom = t.uom;
                String code = t.name;
                double hd_uom = t.qty;
                to_order to = new to_order(product_name, unit_price, quantity, uom, code, hd_uom, t.guest_id, t.cat_id, t.category_name);
                data_orders.add(to);
            }
        }

        Window w = (Window) this;
        Dlg_pay d = Dlg_pay.create(w, true);
        d.setTitle("Pay");
        d.load(new Dlg_pay.InputData((List) data_orders), payment);
        d.do_pass();
        d.setCallback(new Dlg_pay.Callback() {

            @Override
            public void ok(CloseDialog cd, Dlg_pay.OutputData data) {
                cd.ok();
                process_pay(cd, data, data.tt, data.a, data.tc, data.b, data.member_id);
            }

            @Override
            public void ok2(CloseDialog closeDialog, Dlg_pay.OutputData data) {
                closeDialog.ok();
                process_pay(closeDialog, data, data.tt, data.a, data.tc, data.b, data.member_id);

            }
        });
        Application.locateOnParentCenter(w, d);

        d.setVisible(true);
    }

    private void process_pay(CloseDialog cd, Dlg_pay.OutputData data, final to_disc to1, final int a, final to_credit to2, final int b, final String member_id) {

        String tbl_no = S1_cash_advance.get_room_id(lbl_table_no.getText());
        final to_pay tp = new to_pay(
                data.tendered, new Date(), lbl_cashier_name.getText(), data.orders, lbl_or_no.getText());
        if (a == 0) {
//
            Svc_1.pay2(tp, lbl_cashier_name.getText(), to1, to2, b, member_id, my_guest, tbl_no);
        } else {
            Svc_1.pay(tp, lbl_cashier_name.getText(), to1, to2, b, member_id, my_guest, tbl_no);
        }
        String do_print = System.getProperty("do_print", "false");
        if (do_print.equals("true")) {
            printing();
        }
//       
        if (b == 2) {
            Prompt.call("Credit Transaction Posted to Ledger");
        }
        if (b == 3) {
            Prompt.call("Balance Updated");
        }
        String open_drawer = System.getProperty("open_drawer", "false");
        if (open_drawer.equals("true")) {
            CashDrawer.open();
        }
//        S1_check_in.update_room_order(lbl_table_no.getText());
        lbl_table_no.setText("0");
        lbl_amount.setText("0.00");
        lbl_rate.setText("0");
        lbl_advance_payment.setText("0");
        lbl_guest_total.setText("0");
        lbl_oders_payment.setText("0");
        lbl_guest_no.setText("");

        Prompt.call("Successfully Added");
        updateReceipt();
        if ((user_id.equals("5")) || (user_id.equals("0"))) {
            clear_room();
            clear_items();
            init_cashier();
            init_items();
            init_rooms();
        } else {
            clear_orders();
        }
        my_guest.clear();
        set_or();
        lbl_next_customer.setText("NEXT CUSTOMER PLEASE");
    }

    private void clear_orders() {
        orders_model.clear();
        jg_orders.setModel(orders_model);
    }

    private void printing() {

        Svc_1.print_receipt(this, lbl_or_no.getText());
    }

    private void updateReceipt() {
        String or = "" + Svc_1.get_latest_or();
        lbl_or_no.setText(or);
    }

    private void back() {
        user_id = "5";
        lbl_table_no.setText("0");
        btn_add_order.setVisible(false);
        btn_back.setVisible(false);
        clear_categories();
        clear_room();
        item_model.clear();
        jg_items.setModel(item_model);
        init_cashier();
        init_items();
        init_catogories();
        init_rooms();
        pnl_category.setVisible(false);
        pnl_holder_guest_details.setVisible(true);
    }
    List<Dlg_check.to_guests> my_guest = new ArrayList();

    private void add_room_order() {
        int row = orders_model.size();
        if (row <= 0) {
            return;
        }
        List<S2_search.to_orders> datas = new ArrayList();
        List<S2_search.to_items_status> to_sub = new ArrayList();
        for (int i = 0; i < row; i++) {
            Object value = orders_model.getElementAt(i);
            S2_search.to_orders t = (S2_search.to_orders) value;
            datas.add(t);
        }
        if (System.getProperty("version", "ordering").equals("ordering")) {
        }
        boolean check = S2_guest_charges.select_guests(lbl_table_no.getText());

        if ((my_guest.size() == 1 && check == false && !datas.isEmpty())) {
//            JOptionPane.showMessageDialog(null, lbl_table_no.getText() + " " + check + " --asdasdasdads");
            check_ins_ordering();
        }
        S1_check_in.add_order_rooms(datas, lbl_table_no.getText(), my_guest, to_sub);
        user_id = "5";
        lbl_table_no.setText("0");
        btn_add_order.setVisible(false);
        btn_back.setVisible(false);
        clear_room();
        init_cashier();
        init_items();
        init_catogories();
        init_rooms();
        pnl_holder_guest_details.setVisible(true);
        my_guest.clear();
        item_model.clear();
        jg_items.setModel(item_model);
        pnl_category.setVisible(false);
        JOptionPane.showMessageDialog(null, "Order Added");
    }

    private void bill() {
        String guest = cb_guest.getSelectedItem().
                toString();
        if (guest.equals("ALL")) {
        } else {
        }
//       
        String where_charge = "";

        if (guest.equals("ALL")) {
            bill_all();
        } else {
            where_charge = where_charge + " where table_no = '" + lbl_table_no.getText() + "' and status<>'" + "1" + "' and guest_name like '%" + guest + "%'";
            Date d = new Date();
            try {
                d = DateType.datetime.parse(lbl_check_date.getText());
            } catch (ParseException ex) {
                Logger.getLogger(Dashboard.class.getName()).
                        log(Level.SEVERE, null, ex);
            }
            int count = S2_search.ret_guest_charge_count(lbl_table_no.getText(), where_charge);
            String guest_id = "-1";
            String my_date = "Billing";
            String table_no = lbl_table_no.getText();
            String check_in = DateType.liquid.format(d) + " - " + my_date;
            String transfers = cb_guest.getSelectedItem().toString();
            String accomodation = lbl_table_no.getText();
            double accom_total = count * FitIn.toDouble(lbl_rate.getText());
            if (System.getProperty("version", "ordering").equals("ordering")) {
                guest_id = "-1";
            } else {
                guest_id = S2_guest_charges.select_guest_id(guest);
                my_date = DateType.liquid.format(new Date()) + " Billing";
                String aw = DateType.liquid.format(new Date());
//            guest_id = lbl_guest_no.getText();
                table_no = lbl_table_no.getText();
                check_in = DateType.liquid.format(d) + " - " + aw;
                transfers = "none";
                accomodation = "" + count + " x nights @ " + lbl_rate.getText();
                accom_total = count * FitIn.toDouble(lbl_rate.getText());
            }


            String img_path = System.getProperty("img_path", ImgPath.getPath() + "img_templates\\");
//        JOptionPane.showMessageDialog(null, guest);

            final to_date_from.to_guest_billing to = new to_date_from.to_guest_billing(my_date, guest_id, table_no, check_in, transfers, accomodation, accom_total, img_path);
            Executor.doExecute(this, new Executor.Task() {

                @Override
                public void work_on() {
                    String version = System.getProperty("version", "ordering");
                    if (version.equals("ordering")) {
                        rpt_report.pdf_viewer_guest_billing(to, "rpt_guest_billing_ordering");
                    } else {
                        rpt_report.pdf_viewer_guest_billing(to, "rpt_guest_billing_4");
                    }

                }
            });
        }
    }

    private void bill_all() {
        String guest = cb_guest.getSelectedItem().
                toString();
        if (guest.equals("ALL")) {
        } else {
        }
//       
        String where_charge = "";

//        if (guest.equals("ALL")) {
//            return;
//        }
        where_charge = where_charge + " where table_no = '" + lbl_table_no.getText() + "' and status<>'" + "1" + "' ";
        Date d = new Date();
        try {
            d = DateType.datetime.parse(lbl_check_date.getText());
        } catch (ParseException ex) {
            Logger.getLogger(Dashboard.class.getName()).
                    log(Level.SEVERE, null, ex);
        }
        int count = S2_search.ret_guest_charge_count(lbl_table_no.getText(), where_charge);
        String guest_id = "-1";
        String my_date = "Billing";
        String table_no = lbl_table_no.getText();
        String check_in = DateType.liquid.format(d) + " - " + my_date;
        String transfers = cb_guest.getSelectedItem().toString();
        String accomodation = lbl_table_no.getText();
        double accom_total = count * FitIn.toDouble(lbl_rate.getText());
        if (System.getProperty("version", "ordering").equals("ordering")) {
            guest_id = "-1";
        } else {
            guest_id = S2_guest_charges.select_guest_id(guest);
            my_date = DateType.liquid.format(new Date()) + " Billing";
            String aw = DateType.liquid.format(new Date());
            table_no = S1_check_in.get_table_id(lbl_table_no.getText());
            check_in = DateType.liquid.format(d) + " - " + aw;
            transfers = "none";
            accomodation = "" + count + " x nights @ " + lbl_rate.getText();
            accom_total = count * FitIn.toDouble(lbl_rate.getText());
        }
        String img_path = System.getProperty("img_path", ImgPath.getPath() + "img_templates\\");
        final to_date_from.to_guest_billing to = new to_date_from.to_guest_billing(my_date, guest_id, table_no, check_in, transfers, accomodation, accom_total, img_path);
        Executor.doExecute(this, new Executor.Task() {

            @Override
            public void work_on() {
                String version = System.getProperty("version", "ordering");
                if (version.equals("ordering")) {
                    rpt_report.pdf_viewer_guest_billing(to, "rpt_guest_billing_ordering");
                } else {
                    rpt_report.pdf_viewer_guest_billing(to, "rpt_guest_billing_4_1_1");
                }

            }
        });

    }

    private void remitance() {
        Window p = (Window) this;
        Dlg_remit nd = Dlg_remit.create(p, true);
        nd.setTitle("");
        nd.do_pass();
        nd.setCallback(new Dlg_remit.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_remit.OutputData data) {
                closeDialog.ok();
            }
        });
        nd.setLocationRelativeTo(this);

        nd.setVisible(true);
    }

    private void advance_payment() {
        String guest = cb_guest.getSelectedItem().toString();
        if (guest.equals("ALL")) {
            JOptionPane.showMessageDialog(null, "CHOOSE GUEST");
            return;
        }
        String room_no = lbl_table_no.getText();
        String guest_id = S1_cash_advance.get_guest_id(guest);
        double paid = FitIn.toDouble(lbl_advance_payment.getText());
        double to_pay = ((FitIn.toDouble(lbl_rate.getText()) + FitIn.toDouble(lbl_oders_payment.getText())) - paid);
        Window p = (Window) this;
        Dlg_advance_payment nd = Dlg_advance_payment.create(p, true);
        nd.setTitle("");
        nd.do_pass(room_no, guest_id, guest, paid, to_pay);
        nd.setCallback(new Dlg_advance_payment.Callback() {

            @Override
            public void ok(CloseDialog closeDialog, Dlg_advance_payment.OutputData data) {
//                closeDialog.ok();
                set_guest_orders();
            }
        });
        nd.setLocationRelativeTo(this);

        nd.setVisible(true);
    }
}
